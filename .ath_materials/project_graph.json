{
  "dependencyGraph": [
    [
      ".athignore",
      []
    ],
    [
      ".eslintrc.js",
      [
        "@typescript-eslint/parser"
      ]
    ],
    [
      ".github/FUNDING.yml",
      []
    ],
    [
      ".github/ISSUE_TEMPLATE/bug_report.md",
      []
    ],
    [
      ".github/ISSUE_TEMPLATE/config.yml",
      []
    ],
    [
      ".github/ISSUE_TEMPLATE/feature_request.md",
      []
    ],
    [
      ".github/workflows/auto-tag.yml",
      []
    ],
    [
      ".github/workflows/pr-checks.yml",
      []
    ],
    [
      "CHANGELOG.md",
      []
    ],
    [
      "common/types/file-service.ts",
      [
        "fs",
        "add"
      ]
    ],
    [
      "common/types/git-service.ts",
      []
    ],
    [
      "CONTRIBUTING.md",
      []
    ],
    [
      "electron/handlers/contextHandlers.ts",
      [
        "electron",
        "../services/RelevanceEngineService",
        "ath:recalculate-context"
      ]
    ],
    [
      "electron/handlers/coreHandlers.test.ts",
      [
        "./coreHandlers",
        "../services/FileService",
        "../services/SettingsService",
        "../../src/utils/constants",
        "electron",
        "../windowManager",
        "fs"
      ]
    ],
    [
      "electron/handlers/coreHandlers.ts",
      [
        "electron",
        "../windowManager",
        "../services/FileService",
        "../services/SettingsService",
        "../../src/utils/constants",
        "Main window not available for dialog. Showing dialog without parent.",
        "fs"
      ]
    ],
    [
      "electron/handlers/fileOperationHandlers.ts",
      [
        "electron",
        "../services/FileService",
        "../services/PathUtils",
        "fs:getResourcesPath"
      ]
    ],
    [
      "electron/handlers/fileWatchHandlers.ts",
      [
        "electron",
        "../services/FileService",
        "../services/PathUtils",
        "fs:watch"
      ]
    ],
    [
      "electron/handlers/llmIpc.ts",
      [
        "electron",
        "../modules/llm/main/LLMServiceMain",
        "../modules/llm/common/types",
        "Registering LLM IPC handlers"
      ]
    ],
    [
      "electron/handlers/secureApiKeyIpc.ts",
      [
        "electron",
        "../modules/secure-api-storage/main",
        "../modules/secure-api-storage/common",
        "Unknown error"
      ]
    ],
    [
      "electron/handlers/settingsHandlers.ts",
      [
        "electron",
        "../services/SettingsService",
        "../../src/types/global",
        "settings:get-project"
      ]
    ],
    [
      "electron/ignoreRulesManager.test.ts",
      [
        "./ignoreRulesManager",
        "path",
        "fs",
        "],\n        [",
        "] }],\n        ]);\n        const ignoreFiles = new Map([\n          [",
        "],\n        ]);\n        setupFS(fileStructure, ignoreFiles);\n        await ignoreRulesManager.loadIgnoreRules();\n        \n        \n        expect(ignoreRulesManager.ignores(",
        ")).toBe(false);\n        \n        \n        expect(ignoreRulesManager.ignores("
      ]
    ],
    [
      "electron/ignoreRulesManager.ts",
      [
        "path",
        "fs/promises",
        "ignore",
        "../src/utils/constants",
        "./services/PathUtils"
      ]
    ],
    [
      "electron/ipcHandlers.ts",
      [
        "electron",
        "./windowManager",
        "./handlers/coreHandlers",
        "./handlers/fileOperationHandlers",
        "./handlers/fileWatchHandlers",
        "./handlers/settingsHandlers",
        "./handlers/secureApiKeyIpc",
        "./handlers/llmIpc",
        "./handlers/contextHandlers",
        "./services/FileService",
        "./services/SettingsService",
        "./modules/secure-api-storage/main",
        "./modules/llm/main/LLMServiceMain",
        "./services/RelevanceEngineService",
        "./services/ProjectGraphService"
      ]
    ],
    [
      "electron/main.ts",
      [
        "electron",
        "worker_threads",
        "path",
        "./windowManager",
        "./ipcHandlers",
        "./services/FileService",
        "./services/SettingsService",
        "./modules/secure-api-storage/main",
        "./modules/llm/main/LLMServiceMain",
        "./services/RelevanceEngineService",
        "./services/GitService",
        "./services/ProjectGraphService",
        "../src/utils/constants",
        "[Main] Analysis worker already running, skipping trigger.",
        "menu:open-path",
        "../package.json"
      ]
    ],
    [
      "electron/modules/llm/common/types.ts",
      [
        "../../secure-api-storage/common/types",
        "user",
        "HARM_CATEGORY_UNSPECIFIED",
        "HARM_BLOCK_THRESHOLD_UNSPECIFIED",
        "chat.completion",
        "error",
        "llm:get-providers"
      ]
    ],
    [
      "electron/modules/llm/main/clients/adapterErrorUtils.ts",
      [
        "./types",
        "Unknown error occurred"
      ]
    ],
    [
      "electron/modules/llm/main/clients/AnthropicClientAdapter.ts",
      [
        "@anthropic-ai/sdk",
        "../../common/types",
        "./types",
        "./adapterErrorUtils",
        "Anthropic API error:"
      ]
    ],
    [
      "electron/modules/llm/main/clients/GeminiClientAdapter.ts",
      [
        "@google/genai",
        "../../common/types",
        "./types",
        "./adapterErrorUtils",
        "Gemini API error:"
      ]
    ],
    [
      "electron/modules/llm/main/clients/MockClientAdapter.ts",
      [
        "../../common/types",
        "./types",
        "openai"
      ]
    ],
    [
      "electron/modules/llm/main/clients/OpenAIClientAdapter.ts",
      [
        "openai",
        "../../common/types",
        "./types",
        "./adapterErrorUtils",
        "OpenAI API error:"
      ]
    ],
    [
      "electron/modules/llm/main/clients/types.ts",
      [
        "../../common/types",
        "settings",
        "INVALID_API_KEY"
      ]
    ],
    [
      "electron/modules/llm/main/config.ts",
      [
        "../common/types",
        "./clients/types",
        "./clients/OpenAIClientAdapter",
        "./clients/AnthropicClientAdapter",
        "./clients/GeminiClientAdapter",
        "HARM_CATEGORY_HATE_SPEECH",
        "o4-mini",
        "openai",
        "claude-sonnet-4-20250514",
        "number"
      ]
    ],
    [
      "electron/modules/llm/main/LLMServiceMain.ts",
      [
        "../../secure-api-storage/main",
        "../common/types",
        "./clients/types",
        "./clients/MockClientAdapter",
        "./clients/OpenAIClientAdapter",
        "./clients/AnthropicClientAdapter",
        "./config",
        "${provider.id}"
      ]
    ],
    [
      "electron/modules/llm/README.md",
      []
    ],
    [
      "electron/modules/llm/renderer/LLMServiceRenderer.ts",
      [
        "electron",
        "../common/types",
        "Error getting LLM providers:"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/errors.ts",
      [
        "ApiKeyStorageError"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/index.ts",
      [
        "./types",
        "./errors",
        "./providers"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/AnthropicProvider.ts",
      [
        "./ProviderInterface",
        "../types",
        "anthropic"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/GeminiProvider.ts",
      [
        "./ProviderInterface",
        "../types",
        "gemini"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/index.ts",
      [
        "./ProviderInterface",
        "./OpenAIProvider",
        "./AnthropicProvider",
        "./GeminiProvider",
        "./MistralProvider",
        "./ProviderService"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/MistralProvider.ts",
      [
        "./ProviderInterface",
        "../types",
        "mistral"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/OpenAIProvider.ts",
      [
        "./ProviderInterface",
        "../types",
        "openai"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/ProviderInterface.ts",
      [
        "../types"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/ProviderService.ts",
      [
        "./ProviderInterface",
        "../types",
        "./OpenAIProvider",
        "./AnthropicProvider",
        "./GeminiProvider",
        "./MistralProvider"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/types.ts",
      [
        "openai",
        "secure-api-key:store"
      ]
    ],
    [
      "electron/modules/secure-api-storage/main/ApiKeyServiceMain.ts",
      [
        "electron",
        "fs",
        "path",
        "../common",
        "secure_api_keys"
      ]
    ],
    [
      "electron/modules/secure-api-storage/main/index.ts",
      [
        "./ApiKeyServiceMain"
      ]
    ],
    [
      "electron/modules/secure-api-storage/README.md",
      []
    ],
    [
      "electron/modules/secure-api-storage/renderer/ApiKeyServiceRenderer.ts",
      [
        "../common",
        "Secure API key bridge is not available. This may indicate a preload script issue."
      ]
    ],
    [
      "electron/modules/secure-api-storage/renderer/index.ts",
      [
        "./ApiKeyServiceRenderer"
      ]
    ],
    [
      "electron/preload.ts",
      [
        "electron",
        "./modules/secure-api-storage/common/types",
        "./modules/llm/renderer/LLMServiceRenderer"
      ]
    ],
    [
      "electron/services/DependencyScanner.test.ts",
      [
        "./DependencyScanner",
        ", () => {\n      const content = `\n        import * as React from",
        "./MyComponent",
        "../styles/main.css",
        ", () => {\n        const content = `\n            const module = await import(",
        "another-module",
        ", () => {\n      const content = `\n        export { Button } from",
        "./hooks",
        ", () => {\n      const content = `\n        \n        import path from",
        ", () => {\n      const content = `\n        import React from",
        "./utils",
        ", () => {\n      const content = `\nimport os\nimport sys\nimport pandas as pd\n      `;\n      const dependencies = DependencyScanner.scan(pyFilePath, content);\n      expect(dependencies).toEqual(expect.arrayContaining([",
        "statements",
        "my_module",
        ", () => {\n      const content = `\n# import old_module\nfrom new_module import feature\n      `;\n      const dependencies = DependencyScanner.scan(pyFilePath, content);\n      expect(dependencies).toEqual([",
        ", () => {\n      const content = `\nimport services\nfrom services import api\nfrom services.utils import helper\n      `;\n      const dependencies = DependencyScanner.scan(pyFilePath, content);\n      expect(dependencies).toEqual(expect.arrayContaining([",
        ", () => {\n      const cssFilePath =",
        "normalize.css",
        "./variables.css",
        "typography.css",
        ", () => {\n      const scssFilePath =",
        "base/reset",
        "components/button",
        "fs",
        "path",
        "./dynamicModule"
      ]
    ],
    [
      "electron/services/DependencyScanner.ts",
      [
        "path",
        "]([^",
        "javascript"
      ]
    ],
    [
      "electron/services/FileService.test.ts",
      [
        "./FileService",
        "./PathUtils",
        "fs/promises",
        "fs",
        "chokidar"
      ]
    ],
    [
      "electron/services/FileService.ts",
      [
        "fs/promises",
        "fs",
        "chokidar",
        "electron",
        "events",
        "../../common/types/file-service",
        "./PathUtils",
        "../ignoreRulesManager",
        "../../src/utils/constants",
        "/"
      ]
    ],
    [
      "electron/services/GitService.test.ts",
      [
        "./GitService",
        "child_process",
        "fs/promises"
      ]
    ],
    [
      "electron/services/GitService.ts",
      [
        "child_process",
        "util",
        "path",
        "fs/promises",
        "../../common/types/git-service",
        "./PathUtils",
        ".git"
      ]
    ],
    [
      "electron/services/PathUtils.test.ts",
      [
        "./PathUtils",
        "path"
      ]
    ],
    [
      "electron/services/PathUtils.ts",
      [
        "path",
        ";\n    \n    const normalized = inputPath.replace(/\\\\/g,",
        "os"
      ]
    ],
    [
      "electron/services/ProjectGraphService.ts",
      [
        "./FileService",
        "./DependencyScanner",
        "./PathUtils",
        "../../common/types/git-service",
        "project_graph.json",
        "[ProjectGraphService] Failed to save graph to cache:",
        "./"
      ]
    ],
    [
      "electron/services/PromptUtils.ts",
      [
        "js-tiktoken",
        "Failed to get tokenizer",
        "\\n"
      ]
    ],
    [
      "electron/services/RelevanceEngineService.ts",
      [
        "./FileService",
        "../../common/types/git-service",
        "./DependencyScanner",
        "./PathUtils",
        "../../src/utils/constants",
        "./PromptUtils",
        "./ProjectGraphService",
        "./TaskAnalysisUtils",
        ".ts"
      ]
    ],
    [
      "electron/services/SettingsService.ts",
      [
        "electron",
        "../../src/types/global",
        "./FileService",
        "../../src/utils/constants",
        ".ath_materials"
      ]
    ],
    [
      "electron/services/TaskAnalysisUtils.test.ts",
      [
        "./TaskAnalysisUtils"
      ]
    ],
    [
      "electron/services/TaskAnalysisUtils.ts",
      [
        "./wordFilters",
        ");\n\n  \n  const tokenRegex = /[\\w./-]+/g;\n\n  \n  const normalizedText = cleanedText.replace(/\\\\/g,"
      ]
    ],
    [
      "electron/services/wordFilters.ts",
      [
        ",",
        "gui"
      ]
    ],
    [
      "electron/windowManager.ts",
      [
        "electron",
        "path",
        "win32"
      ]
    ],
    [
      "electron/workers/projectAnalysisWorker.ts",
      [
        "worker_threads",
        "../services/FileService",
        "../services/ProjectGraphService",
        "../services/GitService"
      ]
    ],
    [
      "FEATURE.md",
      []
    ],
    [
      "forge.config.js",
      [
        "Athanor"
      ]
    ],
    [
      "jest.config.ts",
      [
        "jest"
      ]
    ],
    [
      "package.json",
      []
    ],
    [
      "postcss.config.js",
      []
    ],
    [
      "PROJECT.md",
      []
    ],
    [
      "README.md",
      []
    ],
    [
      "resources/files/default_athignore",
      []
    ],
    [
      "resources/prompts/custom_prompt_designer.md",
      []
    ],
    [
      "resources/prompts/custom_task_designer.md",
      []
    ],
    [
      "resources/prompts/example_prompt.xml",
      []
    ],
    [
      "resources/prompts/example_task.xml",
      []
    ],
    [
      "resources/prompts/prompt_architect.xml",
      []
    ],
    [
      "resources/prompts/prompt_autoselect.xml",
      []
    ],
    [
      "resources/prompts/prompt_develop.xml",
      []
    ],
    [
      "resources/prompts/prompt_metaprompt.xml",
      []
    ],
    [
      "resources/prompts/prompt_minimal.xml",
      []
    ],
    [
      "resources/prompts/prompt_query.xml",
      []
    ],
    [
      "resources/prompts/prompt_writer.xml",
      []
    ],
    [
      "resources/prompts/task_ai_summary.xml",
      []
    ],
    [
      "resources/prompts/task_pr_changelog.xml",
      []
    ],
    [
      "resources/prompts/task_refactor_files.xml",
      []
    ],
    [
      "resources/prompts/task_unit_tests.xml",
      []
    ],
    [
      "scripts/check-dco.sh",
      []
    ],
    [
      "src/actions/ApplyAiOutputAction.test.ts",
      [
        "./ApplyAiOutputAction",
        "../commands",
        "../stores/applyChangesStore",
        "../types/global"
      ]
    ],
    [
      "src/actions/ApplyAiOutputAction.ts",
      [
        "../types/global",
        "../commands",
        "../stores/applyChangesStore",
        "workbench"
      ]
    ],
    [
      "src/actions/buildTaskAction.test.ts",
      [
        "./buildTaskAction",
        "../utils/fileTree",
        "../types/taskTypes",
        "../stores/workbenchStore",
        "../utils/buildPrompt",
        "../stores/contextStore"
      ]
    ],
    [
      "src/actions/buildTaskAction.ts",
      [
        "../utils/fileTree",
        "../utils/buildPrompt",
        "../types/taskTypes",
        "../stores/workbenchStore",
        "../stores/contextStore",
        "No file tree data available"
      ]
    ],
    [
      "src/actions/descriptions.test.ts",
      [
        "./descriptions",
        "./types",
        "../types/taskTypes"
      ]
    ],
    [
      "src/actions/descriptions.ts",
      [
        "./types",
        "../types/taskTypes",
        "loading"
      ]
    ],
    [
      "src/actions/index.ts",
      [
        "./ApplyAiOutputAction",
        "./buildTaskAction",
        "./ManualCopyAction",
        "./descriptions",
        "./types"
      ]
    ],
    [
      "src/actions/ManualCopyAction.test.ts",
      [
        "./ManualCopyAction",
        "../stores/fileSystemStore",
        "../stores/workbenchStore",
        "../utils/tokenCount",
        "../utils/codebaseDocumentation",
        "../utils/constants"
      ]
    ],
    [
      "src/actions/ManualCopyAction.ts",
      [
        "../utils/tokenCount",
        "../utils/codebaseDocumentation",
        "../stores/fileSystemStore",
        "../stores/workbenchStore",
        "../utils/constants",
        ";\n  return content.replace(/\\r\\n/g,",
        "No files selected to copy",
        "utf8",
        "Formatted content"
      ]
    ],
    [
      "src/actions/types.ts",
      [
        "loading"
      ]
    ],
    [
      "src/App.tsx",
      [
        "react",
        "./components/AthanorApp"
      ]
    ],
    [
      "src/commands/applyChangesCommand.ts",
      [
        "../types/global",
        "./parser/applyChangesParser",
        "../utils/tokenCount",
        "workbench",
        "strict"
      ]
    ],
    [
      "src/commands/descriptions.ts",
      [
        "./parser",
        "./types",
        "Copy AI output to clipboard to enable changes"
      ]
    ],
    [
      "src/commands/index.ts",
      [
        "./selectCommand",
        "./taskCommand",
        "./applyChangesCommand",
        "./types",
        "./parser",
        "./descriptions"
      ]
    ],
    [
      "src/commands/parser/applyChangesParser.ts",
      [
        "../../types/global",
        "../../utils/fileOperations",
        "strict",
        "../../actions/ManualCopyAction"
      ]
    ],
    [
      "src/commands/parser/commandParser.ts",
      [
        "../types",
        "\\n",
        "([^"
      ]
    ],
    [
      "src/commands/parser/index.ts",
      [
        "./commandParser"
      ]
    ],
    [
      "src/commands/selectCommand.ts",
      [
        "../stores/workbenchStore",
        "../stores/fileSystemStore",
        ""
      ]
    ],
    [
      "src/commands/taskCommand.ts",
      [
        "../stores/workbenchStore",
        "Task command contains no content"
      ]
    ],
    [
      "src/commands/types.ts",
      [
        "select",
        "../types/global"
      ]
    ],
    [
      "src/components/action-panel/CustomPromptsHelpModal.tsx",
      [
        "react",
        "lucide-react",
        "../../actions/ManualCopyAction",
        "../../stores/logStore"
      ]
    ],
    [
      "src/components/action-panel/PromptContextMenu.tsx",
      [
        "react",
        "../../types/promptTypes",
        "./VariantsContextMenu",
        "../../stores/logStore"
      ]
    ],
    [
      "src/components/action-panel/SelectedFilesDisplay.tsx",
      [
        "react",
        "lucide-react",
        "../../stores/contextStore"
      ]
    ],
    [
      "src/components/action-panel/SendViaApiControls.tsx",
      [
        "react",
        "lucide-react",
        "../../types/athanorPresets",
        "../../types/global",
        "../../services/athanorPresetService",
        "../../actions/ApplyAiOutputAction",
        "../../stores/applyChangesStore"
      ]
    ],
    [
      "src/components/action-panel/TaskContextMenu.tsx",
      [
        "react",
        "../../types/taskTypes",
        "./VariantsContextMenu",
        "../../stores/logStore"
      ]
    ],
    [
      "src/components/action-panel/VariantsContextMenu.tsx",
      [
        "react",
        "../../utils/constants",
        "../../stores/logStore",
        ".variants-context-menu"
      ]
    ],
    [
      "src/components/ActionPanel.tsx",
      [
        "react",
        "./action-panel/TaskContextMenu",
        "../utils/contextDetection",
        "lucide-react",
        "../types/global",
        "./action-panel/PromptContextMenu",
        "../types/promptTypes",
        "../stores/fileSystemStore",
        "../stores/logStore",
        "../stores/workbenchStore",
        "zustand/react/shallow",
        "../stores/promptStore",
        "../utils/buildPrompt",
        "../utils/fileTree",
        "../actions/ManualCopyAction",
        "../actions",
        "../stores/taskStore",
        "../stores/contextStore",
        "../hooks/useFileDrop",
        "../stores/settingsStore",
        "../utils/constants",
        "./action-panel/SendViaApiControls",
        "./action-panel/CustomPromptsHelpModal",
        "./action-panel/SelectedFilesDisplay"
      ]
    ],
    [
      "src/components/ApiKeyManagementPane.tsx",
      [
        "react",
        "lucide-react",
        "../../electron/modules/secure-api-storage/renderer",
        "../../electron/modules/secure-api-storage/common",
        "../services/athanorPresetService"
      ]
    ],
    [
      "src/components/ApplicationSettingsPane.tsx",
      [
        "react",
        "lucide-react",
        "../types/global",
        "../utils/constants"
      ]
    ],
    [
      "src/components/ApplyChangesPanel.tsx",
      [
        "react",
        "diff",
        "lucide-react",
        "../stores/applyChangesStore",
        "../stores/fileSystemStore",
        "../stores/workbenchStore",
        "../stores/settingsStore",
        "../utils/codebaseDocumentation",
        "../utils/constants"
      ]
    ],
    [
      "src/components/AthanorApp.tsx",
      [
        "react",
        "../utils/fileTree",
        "./MainLayout",
        "./ProjectCreationDialog",
        "../hooks/useFileSystemLifecycle",
        "../stores/logStore",
        "../stores/applyChangesStore",
        "../stores/settingsStore",
        "../stores/workbenchStore",
        "../stores/contextStore",
        "./AthanorTabs"
      ]
    ],
    [
      "src/components/AthanorTabs.tsx",
      [
        "react",
        "lucide-react",
        "./CommandButton",
        "../stores/applyChangesStore",
        "../stores/logStore",
        "../stores/settingsStore",
        "workbench"
      ]
    ],
    [
      "src/components/CommandButton.tsx",
      [
        "react",
        "lucide-react",
        "../stores/commandStore",
        "../commands",
        "../actions/ApplyAiOutputAction"
      ]
    ],
    [
      "src/components/FileContextMenu.tsx",
      [
        "react",
        "../stores/logStore"
      ]
    ],
    [
      "src/components/fileExplorer/FileExplorer.tsx",
      [
        "react",
        "../../stores/fileSystemStore",
        "../../utils/fileTree",
        "../FileContextMenu",
        "./FileExplorerItem",
        "./hooks/useFileExplorer"
      ]
    ],
    [
      "src/components/fileExplorer/FileExplorerItem.tsx",
      [
        "react",
        "lucide-react",
        "../../utils/fileTree",
        "../../utils/constants",
        "../../utils/fileSelection",
        "../../stores/fileSystemStore",
        "../../stores/workbenchStore",
        "../../stores/settingsStore",
        "../../stores/contextStore",
        "../../hooks/useDarkMode"
      ]
    ],
    [
      "src/components/fileExplorer/hooks/useFileExplorer.ts",
      [
        "react",
        "../../../utils/fileTree",
        "folder"
      ]
    ],
    [
      "src/components/FileViewerPanel.tsx",
      [
        "react",
        "lucide-react",
        "react-syntax-highlighter",
        "react-syntax-highlighter/dist/esm/styles/prism",
        "react-syntax-highlighter/dist/esm/languages/prism/javascript",
        "react-syntax-highlighter/dist/esm/languages/prism/jsx",
        "react-syntax-highlighter/dist/esm/languages/prism/typescript",
        "react-syntax-highlighter/dist/esm/languages/prism/tsx",
        "react-syntax-highlighter/dist/esm/languages/prism/python",
        "react-syntax-highlighter/dist/esm/languages/prism/css",
        "react-syntax-highlighter/dist/esm/languages/prism/markup",
        "react-syntax-highlighter/dist/esm/languages/prism/json",
        "react-syntax-highlighter/dist/esm/languages/prism/yaml",
        "react-syntax-highlighter/dist/esm/languages/prism/markdown",
        "react-syntax-highlighter/dist/esm/languages/prism/bash",
        "react-syntax-highlighter/dist/esm/languages/prism/java",
        "react-syntax-highlighter/dist/esm/languages/prism/c",
        "react-syntax-highlighter/dist/esm/languages/prism/cpp",
        "react-syntax-highlighter/dist/esm/languages/prism/ruby",
        "react-syntax-highlighter/dist/esm/languages/prism/php",
        "react-syntax-highlighter/dist/esm/languages/prism/go",
        "react-syntax-highlighter/dist/esm/languages/prism/rust",
        "react-syntax-highlighter/dist/esm/languages/prism/swift",
        "react-syntax-highlighter/dist/esm/languages/prism/ini",
        "react-syntax-highlighter/dist/esm/languages/prism/diff",
        "../stores/fileSystemStore",
        "../stores/logStore",
        "../stores/commandStore",
        "../stores/applyChangesStore",
        "../stores/settingsStore",
        "../actions/ManualCopyAction",
        "../utils/fileTextDetection",
        "../utils/languageMapping",
        "./AthanorTabs",
        "../types/global"
      ]
    ],
    [
      "src/components/MainLayout.tsx",
      [
        "react",
        "lucide-react",
        "../stores/logStore",
        "./fileExplorer/FileExplorer",
        "./ActionPanel",
        "./FileViewerPanel",
        "./ApplyChangesPanel",
        "./SettingsPanel",
        "./AthanorTabs",
        "../stores/fileSystemStore",
        "../stores/workbenchStore",
        "../stores/contextStore",
        "../utils/fileTree",
        "../hooks/usePanelResize",
        "../hooks/useLogPanelResize",
        "../actions/ManualCopyAction",
        "../utils/fileSelection"
      ]
    ],
    [
      "src/components/ProjectCreationDialog.tsx",
      [
        "react",
        "lucide-react"
      ]
    ],
    [
      "src/components/ProjectSettingsPane.tsx",
      [
        "react",
        "lucide-react",
        "../types/global",
        "../utils/constants"
      ]
    ],
    [
      "src/components/SettingsPanel.tsx",
      [
        "react",
        "../stores/settingsStore",
        "../stores/fileSystemStore",
        "../utils/constants",
        "./ProjectSettingsPane",
        "./ApplicationSettingsPane",
        "./ApiKeyManagementPane"
      ]
    ],
    [
      "src/config/athanorModelPresets.json",
      []
    ],
    [
      "src/hooks/useDarkMode.ts",
      [
        "react",
        "../stores/settingsStore"
      ]
    ],
    [
      "src/hooks/useFileDrop.ts",
      [
        "react",
        "../utils/constants",
        "../stores/logStore",
        "copy"
      ]
    ],
    [
      "src/hooks/useFileSystemLifecycle.ts",
      [
        "react",
        "../utils/fileTree",
        "../services/fileSystemService",
        "../services/fileIgnoreService",
        "../stores/fileSystemStore",
        "../stores/workbenchStore",
        "../stores/logStore",
        "../stores/settingsStore",
        "../stores/contextStore",
        "../services/promptService",
        "../utils/configUtils",
        "../utils/constants",
        "../types/global",
        ");\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const [appVersion, setAppVersion] = useState<string>("
      ]
    ],
    [
      "src/hooks/useLogPanelResize.ts",
      [
        "react",
        "mousemove"
      ]
    ],
    [
      "src/hooks/usePanelResize.ts",
      [
        "react",
        "mousemove"
      ]
    ],
    [
      "src/index.css",
      []
    ],
    [
      "src/index.tsx",
      [
        "react",
        "react-dom/client",
        "./App",
        "./index.css"
      ]
    ],
    [
      "src/services/athanorPresetService.ts",
      [
        "../types/athanorPresets",
        "../stores/logStore",
        "../config/athanorModelPresets.json"
      ]
    ],
    [
      "src/services/fileIgnoreService.ts",
      [
        "files/default_athignore"
      ]
    ],
    [
      "src/services/fileSystemService.ts",
      [
        "../utils/fileTree",
        "../utils/constants",
        ",\r\n  isMaterialsTree: boolean = false,\r\n  applyIgnores: boolean = true\r\n): Promise<FileItem> {\r\n  \r\n  const fullPath = await window.pathUtils.join(basePath, currentPath);\r\n  \r\n  let name = currentPath\r\n    ? currentPath.split(",
        "utf8",
        "file",
        "folder"
      ]
    ],
    [
      "src/services/promptService.ts",
      [
        "../types/promptTypes",
        "../types/taskTypes",
        "../stores/promptStore",
        "../stores/taskStore",
        "./fileSystemService",
        "../utils/constants",
        "prompts"
      ]
    ],
    [
      "src/stores/applyChangesStore.ts",
      [
        "zustand",
        "./logStore",
        "../types/global",
        "strict"
      ]
    ],
    [
      "src/stores/commandStore.ts",
      [
        "zustand",
        "../commands"
      ]
    ],
    [
      "src/stores/contextStore.ts",
      [
        "zustand",
        ",\r\n\r\n  fetchContext: async (selectedPaths: string[], taskDescription?: string) => {\r\n    if (process.env.NODE_ENV !=="
      ]
    ],
    [
      "src/stores/fileSystemStore.ts",
      [
        "zustand",
        "../utils/fileTree",
        "../utils/constants",
        "../types/global"
      ]
    ],
    [
      "src/stores/logStore.ts",
      [
        "zustand",
        "id",
        "string"
      ]
    ],
    [
      "src/stores/promptStore.ts",
      [
        "zustand",
        "../types/promptTypes",
        "zustand/middleware",
        "default"
      ]
    ],
    [
      "src/stores/settingsStore.ts",
      [
        "zustand",
        "../types/global",
        "../utils/constants",
        "Loaded project settings:"
      ]
    ],
    [
      "src/stores/taskStore.ts",
      [
        "zustand",
        "../types/taskTypes",
        "zustand/middleware",
        "default"
      ]
    ],
    [
      "src/stores/workbenchStore.test.ts",
      [
        "./workbenchStore",
        "../utils/fileTree",
        "../utils/fileSelection"
      ]
    ],
    [
      "src/stores/workbenchStore.ts",
      [
        "zustand",
        "../types/global",
        "../utils/constants",
        "../utils/fileSelection",
        "../utils/fileTree",
        ");\r\n      state.setTabContext(state.activeTabIndex,",
        "./settingsStore"
      ]
    ],
    [
      "src/types/athanorPresets.ts",
      [
        "../../electron/modules/llm/common/types"
      ]
    ],
    [
      "src/types/global.d.ts",
      [
        "../actions",
        "./promptTypes",
        "./taskTypes",
        "../stores/logStore",
        "user",
        "js-tiktoken",
        "gpt-4",
        "cl100k_base",
        "apply changes",
        "CREATE"
      ]
    ],
    [
      "src/types/promptTypes.ts",
      [
        "default"
      ]
    ],
    [
      "src/types/taskTypes.ts",
      [
        "selected"
      ]
    ],
    [
      "src/utils/buildPrompt.ts",
      [
        "./fileTree",
        "./codebaseDocumentation",
        "./constants",
        "./promptTemplates",
        "../types/promptTypes",
        "../stores/fileSystemStore",
        "../types/global",
        "file",
        ",\n  taskContext: string =",
        "./configUtils"
      ]
    ],
    [
      "src/utils/codebaseDocumentation.ts",
      [
        "./fileTree",
        "../types/global",
        "./fileSelection",
        "./constants",
        "./fileTextDetection",
        ".",
        "\\n",
        "_",
        ",\n  isSelected: boolean = false,\n  formatType: string = DOC_FORMAT.MARKDOWN,\n  currentThresholdLineLength?: number \n): string {\n  const relativePath = rootPath\n    ? filePath.replace(rootPath,",
        ";\n\n  \n  const processItem = async (item: FileItem): Promise<void> => {\n    if (item.type ==="
      ]
    ],
    [
      "src/utils/configUtils.ts",
      [
        "../types/global",
        "./fileTree",
        "./projectInfoUtils",
        ",\r\n    project_info_path: undefined,\r\n  };\r\n}\r\n\r\n\r\nexport async function readAthanorConfig(\r\n  basePath: string,\r\n  projectSettings?: ProjectSettings | null\r\n): Promise<AthanorConfig> {\r\n  try {\r\n    \r\n    const fallbackConfig = getFallbackConfig(basePath);\r\n    let config = { ...fallbackConfig };\r\n    \r\n    \r\n    if (projectSettings?.projectNameOverride?.trim()) {\r\n      config.project_name = projectSettings.projectNameOverride.trim();\r\n      console.log("
      ]
    ],
    [
      "src/utils/constants.ts",
      [
        "markdown",
        ".ath_materials",
        "project_settings.json",
        "prompts",
        "project",
        "150ms",
        "application/x-athanor-filepath"
      ]
    ],
    [
      "src/utils/contextDetection.ts",
      [
        "commit"
      ]
    ],
    [
      "src/utils/extractTagContent.ts",
      []
    ],
    [
      "src/utils/fileOperations.ts",
      [
        "../types/global",
        "diff-match-patch",
        ";\r\n\r\n  \r\n  if (\r\n    content.startsWith(",
        "Search block cannot be empty",
        ";\r\n  \r\n  let normalized = content.replace(/\\r\\n/g,",
        "UPDATE_FULL"
      ]
    ],
    [
      "src/utils/fileSelection.ts",
      [
        "./fileTree",
        "file"
      ]
    ],
    [
      "src/utils/fileTextDetection.ts",
      [
        "./constants",
        "txt",
        "string"
      ]
    ],
    [
      "src/utils/fileTree.ts",
      [
        "file",
        "folder",
        "/"
      ]
    ],
    [
      "src/utils/languageMapping.ts",
      [
        "text"
      ]
    ],
    [
      "src/utils/projectInfoUtils.ts",
      [
        "./constants",
        "\\n",
        "); \r\n    \r\n    if (!cleanPath) {\r\n      console.warn(",
        "utf8"
      ]
    ],
    [
      "src/utils/promptTemplates.ts",
      [
        "./buildPrompt",
        "./extractTagContent",
        "utf8",
        "task_description",
        "?"
      ]
    ],
    [
      "src/utils/tokenCount.ts",
      [
        "js-tiktoken",
        "Empty text passed to countTokens",
        "0 tokens"
      ]
    ],
    [
      "tailwind.config.js",
      [
        "./src*.{js,jsx,ts,tsx}"
      ]
    ],
    [
      "tests/__mocks__/electron.ts",
      [
        "/fake/app"
      ]
    ],
    [
      "tsconfig.json",
      []
    ],
    [
      "TUTORIAL.md",
      []
    ],
    [
      "webpack.main.config.js",
      [
        "main/index",
        "path"
      ]
    ],
    [
      "webpack.preload.config.js",
      [
        "./electron/preload.ts",
        "path"
      ]
    ],
    [
      "webpack.renderer.config.js",
      [
        "development",
        "path"
      ]
    ]
  ],
  "dependentsGraph": [
    [
      ".athignore",
      []
    ],
    [
      ".eslintrc.js",
      []
    ],
    [
      ".github/FUNDING.yml",
      []
    ],
    [
      ".github/ISSUE_TEMPLATE/bug_report.md",
      []
    ],
    [
      ".github/ISSUE_TEMPLATE/config.yml",
      []
    ],
    [
      ".github/ISSUE_TEMPLATE/feature_request.md",
      []
    ],
    [
      ".github/workflows/auto-tag.yml",
      []
    ],
    [
      ".github/workflows/pr-checks.yml",
      []
    ],
    [
      "CHANGELOG.md",
      []
    ],
    [
      "common/types/file-service.ts",
      [
        "electron/services/FileService.ts"
      ]
    ],
    [
      "common/types/git-service.ts",
      [
        "electron/services/GitService.ts",
        "electron/services/ProjectGraphService.ts",
        "electron/services/RelevanceEngineService.ts"
      ]
    ],
    [
      "CONTRIBUTING.md",
      []
    ],
    [
      "electron/handlers/contextHandlers.ts",
      [
        "electron/ipcHandlers.ts"
      ]
    ],
    [
      "electron/handlers/coreHandlers.test.ts",
      []
    ],
    [
      "electron/handlers/coreHandlers.ts",
      [
        "electron/handlers/coreHandlers.test.ts",
        "electron/ipcHandlers.ts"
      ]
    ],
    [
      "electron/handlers/fileOperationHandlers.ts",
      [
        "electron/ipcHandlers.ts"
      ]
    ],
    [
      "electron/handlers/fileWatchHandlers.ts",
      [
        "electron/ipcHandlers.ts"
      ]
    ],
    [
      "electron/handlers/llmIpc.ts",
      [
        "electron/ipcHandlers.ts"
      ]
    ],
    [
      "electron/handlers/secureApiKeyIpc.ts",
      [
        "electron/ipcHandlers.ts"
      ]
    ],
    [
      "electron/handlers/settingsHandlers.ts",
      [
        "electron/ipcHandlers.ts"
      ]
    ],
    [
      "electron/ignoreRulesManager.test.ts",
      []
    ],
    [
      "electron/ignoreRulesManager.ts",
      [
        "electron/ignoreRulesManager.test.ts",
        "electron/services/FileService.ts"
      ]
    ],
    [
      "electron/ipcHandlers.ts",
      [
        "electron/main.ts"
      ]
    ],
    [
      "electron/main.ts",
      []
    ],
    [
      "electron/modules/llm/common/types.ts",
      [
        "electron/handlers/llmIpc.ts",
        "electron/modules/llm/main/clients/AnthropicClientAdapter.ts",
        "electron/modules/llm/main/clients/GeminiClientAdapter.ts",
        "electron/modules/llm/main/clients/MockClientAdapter.ts",
        "electron/modules/llm/main/clients/OpenAIClientAdapter.ts",
        "electron/modules/llm/main/clients/types.ts",
        "electron/modules/llm/main/config.ts",
        "electron/modules/llm/main/LLMServiceMain.ts",
        "electron/modules/llm/renderer/LLMServiceRenderer.ts",
        "src/types/athanorPresets.ts"
      ]
    ],
    [
      "electron/modules/llm/main/clients/adapterErrorUtils.ts",
      [
        "electron/modules/llm/main/clients/AnthropicClientAdapter.ts",
        "electron/modules/llm/main/clients/GeminiClientAdapter.ts",
        "electron/modules/llm/main/clients/OpenAIClientAdapter.ts"
      ]
    ],
    [
      "electron/modules/llm/main/clients/AnthropicClientAdapter.ts",
      [
        "electron/modules/llm/main/config.ts",
        "electron/modules/llm/main/LLMServiceMain.ts"
      ]
    ],
    [
      "electron/modules/llm/main/clients/GeminiClientAdapter.ts",
      [
        "electron/modules/llm/main/config.ts"
      ]
    ],
    [
      "electron/modules/llm/main/clients/MockClientAdapter.ts",
      [
        "electron/modules/llm/main/LLMServiceMain.ts"
      ]
    ],
    [
      "electron/modules/llm/main/clients/OpenAIClientAdapter.ts",
      [
        "electron/modules/llm/main/config.ts",
        "electron/modules/llm/main/LLMServiceMain.ts"
      ]
    ],
    [
      "electron/modules/llm/main/clients/types.ts",
      [
        "electron/modules/llm/main/clients/adapterErrorUtils.ts",
        "electron/modules/llm/main/clients/AnthropicClientAdapter.ts",
        "electron/modules/llm/main/clients/GeminiClientAdapter.ts",
        "electron/modules/llm/main/clients/MockClientAdapter.ts",
        "electron/modules/llm/main/clients/OpenAIClientAdapter.ts",
        "electron/modules/llm/main/config.ts",
        "electron/modules/llm/main/LLMServiceMain.ts"
      ]
    ],
    [
      "electron/modules/llm/main/config.ts",
      [
        "electron/modules/llm/main/LLMServiceMain.ts"
      ]
    ],
    [
      "electron/modules/llm/main/LLMServiceMain.ts",
      [
        "electron/handlers/llmIpc.ts",
        "electron/ipcHandlers.ts",
        "electron/main.ts"
      ]
    ],
    [
      "electron/modules/llm/README.md",
      []
    ],
    [
      "electron/modules/llm/renderer/LLMServiceRenderer.ts",
      [
        "electron/preload.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/errors.ts",
      [
        "electron/modules/secure-api-storage/common/index.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/index.ts",
      [
        "electron/handlers/secureApiKeyIpc.ts",
        "electron/modules/secure-api-storage/main/ApiKeyServiceMain.ts",
        "electron/modules/secure-api-storage/renderer/ApiKeyServiceRenderer.ts",
        "src/components/ApiKeyManagementPane.tsx"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/AnthropicProvider.ts",
      [
        "electron/modules/secure-api-storage/common/providers/index.ts",
        "electron/modules/secure-api-storage/common/providers/ProviderService.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/GeminiProvider.ts",
      [
        "electron/modules/secure-api-storage/common/providers/index.ts",
        "electron/modules/secure-api-storage/common/providers/ProviderService.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/index.ts",
      [
        "electron/modules/secure-api-storage/common/index.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/MistralProvider.ts",
      [
        "electron/modules/secure-api-storage/common/providers/index.ts",
        "electron/modules/secure-api-storage/common/providers/ProviderService.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/OpenAIProvider.ts",
      [
        "electron/modules/secure-api-storage/common/providers/index.ts",
        "electron/modules/secure-api-storage/common/providers/ProviderService.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/ProviderInterface.ts",
      [
        "electron/modules/secure-api-storage/common/providers/AnthropicProvider.ts",
        "electron/modules/secure-api-storage/common/providers/GeminiProvider.ts",
        "electron/modules/secure-api-storage/common/providers/index.ts",
        "electron/modules/secure-api-storage/common/providers/MistralProvider.ts",
        "electron/modules/secure-api-storage/common/providers/OpenAIProvider.ts",
        "electron/modules/secure-api-storage/common/providers/ProviderService.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/ProviderService.ts",
      [
        "electron/modules/secure-api-storage/common/providers/index.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/types.ts",
      [
        "electron/modules/llm/common/types.ts",
        "electron/modules/secure-api-storage/common/index.ts",
        "electron/modules/secure-api-storage/common/providers/AnthropicProvider.ts",
        "electron/modules/secure-api-storage/common/providers/GeminiProvider.ts",
        "electron/modules/secure-api-storage/common/providers/MistralProvider.ts",
        "electron/modules/secure-api-storage/common/providers/OpenAIProvider.ts",
        "electron/modules/secure-api-storage/common/providers/ProviderInterface.ts",
        "electron/modules/secure-api-storage/common/providers/ProviderService.ts",
        "electron/preload.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/main/ApiKeyServiceMain.ts",
      [
        "electron/modules/secure-api-storage/main/index.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/main/index.ts",
      [
        "electron/handlers/secureApiKeyIpc.ts",
        "electron/ipcHandlers.ts",
        "electron/main.ts",
        "electron/modules/llm/main/LLMServiceMain.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/README.md",
      []
    ],
    [
      "electron/modules/secure-api-storage/renderer/ApiKeyServiceRenderer.ts",
      [
        "electron/modules/secure-api-storage/renderer/index.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/renderer/index.ts",
      [
        "src/components/ApiKeyManagementPane.tsx"
      ]
    ],
    [
      "electron/preload.ts",
      [
        "webpack.preload.config.js"
      ]
    ],
    [
      "electron/services/DependencyScanner.test.ts",
      []
    ],
    [
      "electron/services/DependencyScanner.ts",
      [
        "electron/services/DependencyScanner.test.ts",
        "electron/services/ProjectGraphService.ts",
        "electron/services/RelevanceEngineService.ts"
      ]
    ],
    [
      "electron/services/FileService.test.ts",
      []
    ],
    [
      "electron/services/FileService.ts",
      [
        "electron/handlers/coreHandlers.test.ts",
        "electron/handlers/coreHandlers.ts",
        "electron/handlers/fileOperationHandlers.ts",
        "electron/handlers/fileWatchHandlers.ts",
        "electron/ipcHandlers.ts",
        "electron/main.ts",
        "electron/services/FileService.test.ts",
        "electron/services/ProjectGraphService.ts",
        "electron/services/RelevanceEngineService.ts",
        "electron/services/SettingsService.ts",
        "electron/workers/projectAnalysisWorker.ts"
      ]
    ],
    [
      "electron/services/GitService.test.ts",
      []
    ],
    [
      "electron/services/GitService.ts",
      [
        "electron/main.ts",
        "electron/services/GitService.test.ts",
        "electron/workers/projectAnalysisWorker.ts"
      ]
    ],
    [
      "electron/services/PathUtils.test.ts",
      []
    ],
    [
      "electron/services/PathUtils.ts",
      [
        "electron/handlers/fileOperationHandlers.ts",
        "electron/handlers/fileWatchHandlers.ts",
        "electron/ignoreRulesManager.ts",
        "electron/services/FileService.test.ts",
        "electron/services/FileService.ts",
        "electron/services/GitService.ts",
        "electron/services/PathUtils.test.ts",
        "electron/services/ProjectGraphService.ts",
        "electron/services/RelevanceEngineService.ts"
      ]
    ],
    [
      "electron/services/ProjectGraphService.ts",
      [
        "electron/ipcHandlers.ts",
        "electron/main.ts",
        "electron/services/RelevanceEngineService.ts",
        "electron/workers/projectAnalysisWorker.ts"
      ]
    ],
    [
      "electron/services/PromptUtils.ts",
      [
        "electron/services/RelevanceEngineService.ts"
      ]
    ],
    [
      "electron/services/RelevanceEngineService.ts",
      [
        "electron/handlers/contextHandlers.ts",
        "electron/ipcHandlers.ts",
        "electron/main.ts"
      ]
    ],
    [
      "electron/services/SettingsService.ts",
      [
        "electron/handlers/coreHandlers.test.ts",
        "electron/handlers/coreHandlers.ts",
        "electron/handlers/settingsHandlers.ts",
        "electron/ipcHandlers.ts",
        "electron/main.ts"
      ]
    ],
    [
      "electron/services/TaskAnalysisUtils.test.ts",
      []
    ],
    [
      "electron/services/TaskAnalysisUtils.ts",
      [
        "electron/services/RelevanceEngineService.ts",
        "electron/services/TaskAnalysisUtils.test.ts"
      ]
    ],
    [
      "electron/services/wordFilters.ts",
      [
        "electron/services/TaskAnalysisUtils.ts"
      ]
    ],
    [
      "electron/windowManager.ts",
      [
        "electron/handlers/coreHandlers.test.ts",
        "electron/handlers/coreHandlers.ts",
        "electron/ipcHandlers.ts",
        "electron/main.ts"
      ]
    ],
    [
      "electron/workers/projectAnalysisWorker.ts",
      []
    ],
    [
      "FEATURE.md",
      []
    ],
    [
      "forge.config.js",
      []
    ],
    [
      "jest.config.ts",
      []
    ],
    [
      "package.json",
      [
        "electron/main.ts"
      ]
    ],
    [
      "postcss.config.js",
      []
    ],
    [
      "PROJECT.md",
      []
    ],
    [
      "README.md",
      []
    ],
    [
      "resources/files/default_athignore",
      []
    ],
    [
      "resources/prompts/custom_prompt_designer.md",
      []
    ],
    [
      "resources/prompts/custom_task_designer.md",
      []
    ],
    [
      "resources/prompts/example_prompt.xml",
      []
    ],
    [
      "resources/prompts/example_task.xml",
      []
    ],
    [
      "resources/prompts/prompt_architect.xml",
      []
    ],
    [
      "resources/prompts/prompt_autoselect.xml",
      []
    ],
    [
      "resources/prompts/prompt_develop.xml",
      []
    ],
    [
      "resources/prompts/prompt_metaprompt.xml",
      []
    ],
    [
      "resources/prompts/prompt_minimal.xml",
      []
    ],
    [
      "resources/prompts/prompt_query.xml",
      []
    ],
    [
      "resources/prompts/prompt_writer.xml",
      []
    ],
    [
      "resources/prompts/task_ai_summary.xml",
      []
    ],
    [
      "resources/prompts/task_pr_changelog.xml",
      []
    ],
    [
      "resources/prompts/task_refactor_files.xml",
      []
    ],
    [
      "resources/prompts/task_unit_tests.xml",
      []
    ],
    [
      "scripts/check-dco.sh",
      []
    ],
    [
      "src/actions/ApplyAiOutputAction.test.ts",
      []
    ],
    [
      "src/actions/ApplyAiOutputAction.ts",
      [
        "src/actions/ApplyAiOutputAction.test.ts",
        "src/actions/index.ts",
        "src/components/action-panel/SendViaApiControls.tsx",
        "src/components/CommandButton.tsx"
      ]
    ],
    [
      "src/actions/buildTaskAction.test.ts",
      []
    ],
    [
      "src/actions/buildTaskAction.ts",
      [
        "src/actions/buildTaskAction.test.ts",
        "src/actions/index.ts"
      ]
    ],
    [
      "src/actions/descriptions.test.ts",
      []
    ],
    [
      "src/actions/descriptions.ts",
      [
        "src/actions/descriptions.test.ts",
        "src/actions/index.ts"
      ]
    ],
    [
      "src/actions/index.ts",
      [
        "src/components/ActionPanel.tsx",
        "src/types/global.d.ts"
      ]
    ],
    [
      "src/actions/ManualCopyAction.test.ts",
      []
    ],
    [
      "src/actions/ManualCopyAction.ts",
      [
        "src/actions/index.ts",
        "src/actions/ManualCopyAction.test.ts",
        "src/commands/parser/applyChangesParser.ts",
        "src/components/action-panel/CustomPromptsHelpModal.tsx",
        "src/components/ActionPanel.tsx",
        "src/components/FileViewerPanel.tsx",
        "src/components/MainLayout.tsx"
      ]
    ],
    [
      "src/actions/types.ts",
      [
        "src/actions/descriptions.test.ts",
        "src/actions/descriptions.ts",
        "src/actions/index.ts"
      ]
    ],
    [
      "src/App.tsx",
      [
        "src/index.tsx"
      ]
    ],
    [
      "src/commands/applyChangesCommand.ts",
      [
        "src/commands/index.ts"
      ]
    ],
    [
      "src/commands/descriptions.ts",
      [
        "src/commands/index.ts"
      ]
    ],
    [
      "src/commands/index.ts",
      [
        "src/actions/ApplyAiOutputAction.test.ts",
        "src/actions/ApplyAiOutputAction.ts",
        "src/components/CommandButton.tsx",
        "src/stores/commandStore.ts"
      ]
    ],
    [
      "src/commands/parser/applyChangesParser.ts",
      [
        "src/commands/applyChangesCommand.ts"
      ]
    ],
    [
      "src/commands/parser/commandParser.ts",
      [
        "src/commands/parser/index.ts"
      ]
    ],
    [
      "src/commands/parser/index.ts",
      [
        "src/commands/descriptions.ts",
        "src/commands/index.ts"
      ]
    ],
    [
      "src/commands/selectCommand.ts",
      [
        "src/commands/index.ts"
      ]
    ],
    [
      "src/commands/taskCommand.ts",
      [
        "src/commands/index.ts"
      ]
    ],
    [
      "src/commands/types.ts",
      [
        "src/commands/descriptions.ts",
        "src/commands/index.ts",
        "src/commands/parser/commandParser.ts"
      ]
    ],
    [
      "src/components/action-panel/CustomPromptsHelpModal.tsx",
      [
        "src/components/ActionPanel.tsx"
      ]
    ],
    [
      "src/components/action-panel/PromptContextMenu.tsx",
      [
        "src/components/ActionPanel.tsx"
      ]
    ],
    [
      "src/components/action-panel/SelectedFilesDisplay.tsx",
      [
        "src/components/ActionPanel.tsx"
      ]
    ],
    [
      "src/components/action-panel/SendViaApiControls.tsx",
      [
        "src/components/ActionPanel.tsx"
      ]
    ],
    [
      "src/components/action-panel/TaskContextMenu.tsx",
      [
        "src/components/ActionPanel.tsx"
      ]
    ],
    [
      "src/components/action-panel/VariantsContextMenu.tsx",
      [
        "src/components/action-panel/PromptContextMenu.tsx",
        "src/components/action-panel/TaskContextMenu.tsx"
      ]
    ],
    [
      "src/components/ActionPanel.tsx",
      [
        "src/components/MainLayout.tsx"
      ]
    ],
    [
      "src/components/ApiKeyManagementPane.tsx",
      [
        "src/components/SettingsPanel.tsx"
      ]
    ],
    [
      "src/components/ApplicationSettingsPane.tsx",
      [
        "src/components/SettingsPanel.tsx"
      ]
    ],
    [
      "src/components/ApplyChangesPanel.tsx",
      [
        "src/components/MainLayout.tsx"
      ]
    ],
    [
      "src/components/AthanorApp.tsx",
      [
        "src/App.tsx"
      ]
    ],
    [
      "src/components/AthanorTabs.tsx",
      [
        "src/components/AthanorApp.tsx",
        "src/components/FileViewerPanel.tsx",
        "src/components/MainLayout.tsx"
      ]
    ],
    [
      "src/components/CommandButton.tsx",
      [
        "src/components/AthanorTabs.tsx"
      ]
    ],
    [
      "src/components/FileContextMenu.tsx",
      [
        "src/components/fileExplorer/FileExplorer.tsx"
      ]
    ],
    [
      "src/components/fileExplorer/FileExplorer.tsx",
      [
        "src/components/MainLayout.tsx"
      ]
    ],
    [
      "src/components/fileExplorer/FileExplorerItem.tsx",
      [
        "src/components/fileExplorer/FileExplorer.tsx"
      ]
    ],
    [
      "src/components/fileExplorer/hooks/useFileExplorer.ts",
      [
        "src/components/fileExplorer/FileExplorer.tsx"
      ]
    ],
    [
      "src/components/FileViewerPanel.tsx",
      [
        "src/components/MainLayout.tsx"
      ]
    ],
    [
      "src/components/MainLayout.tsx",
      [
        "src/components/AthanorApp.tsx"
      ]
    ],
    [
      "src/components/ProjectCreationDialog.tsx",
      [
        "src/components/AthanorApp.tsx"
      ]
    ],
    [
      "src/components/ProjectSettingsPane.tsx",
      [
        "src/components/SettingsPanel.tsx"
      ]
    ],
    [
      "src/components/SettingsPanel.tsx",
      [
        "src/components/MainLayout.tsx"
      ]
    ],
    [
      "src/config/athanorModelPresets.json",
      [
        "src/services/athanorPresetService.ts"
      ]
    ],
    [
      "src/hooks/useDarkMode.ts",
      [
        "src/components/fileExplorer/FileExplorerItem.tsx"
      ]
    ],
    [
      "src/hooks/useFileDrop.ts",
      [
        "src/components/ActionPanel.tsx"
      ]
    ],
    [
      "src/hooks/useFileSystemLifecycle.ts",
      [
        "src/components/AthanorApp.tsx"
      ]
    ],
    [
      "src/hooks/useLogPanelResize.ts",
      [
        "src/components/MainLayout.tsx"
      ]
    ],
    [
      "src/hooks/usePanelResize.ts",
      [
        "src/components/MainLayout.tsx"
      ]
    ],
    [
      "src/index.css",
      [
        "src/index.tsx"
      ]
    ],
    [
      "src/index.tsx",
      []
    ],
    [
      "src/services/athanorPresetService.ts",
      [
        "src/components/action-panel/SendViaApiControls.tsx",
        "src/components/ApiKeyManagementPane.tsx"
      ]
    ],
    [
      "src/services/fileIgnoreService.ts",
      [
        "src/hooks/useFileSystemLifecycle.ts"
      ]
    ],
    [
      "src/services/fileSystemService.ts",
      [
        "src/hooks/useFileSystemLifecycle.ts",
        "src/services/promptService.ts"
      ]
    ],
    [
      "src/services/promptService.ts",
      [
        "src/hooks/useFileSystemLifecycle.ts"
      ]
    ],
    [
      "src/stores/applyChangesStore.ts",
      [
        "src/actions/ApplyAiOutputAction.test.ts",
        "src/actions/ApplyAiOutputAction.ts",
        "src/components/action-panel/SendViaApiControls.tsx",
        "src/components/ApplyChangesPanel.tsx",
        "src/components/AthanorApp.tsx",
        "src/components/AthanorTabs.tsx",
        "src/components/FileViewerPanel.tsx"
      ]
    ],
    [
      "src/stores/commandStore.ts",
      [
        "src/components/CommandButton.tsx",
        "src/components/FileViewerPanel.tsx"
      ]
    ],
    [
      "src/stores/contextStore.ts",
      [
        "src/actions/buildTaskAction.test.ts",
        "src/actions/buildTaskAction.ts",
        "src/components/action-panel/SelectedFilesDisplay.tsx",
        "src/components/ActionPanel.tsx",
        "src/components/AthanorApp.tsx",
        "src/components/fileExplorer/FileExplorerItem.tsx",
        "src/components/MainLayout.tsx",
        "src/hooks/useFileSystemLifecycle.ts"
      ]
    ],
    [
      "src/stores/fileSystemStore.ts",
      [
        "src/actions/ManualCopyAction.test.ts",
        "src/actions/ManualCopyAction.ts",
        "src/commands/selectCommand.ts",
        "src/components/ActionPanel.tsx",
        "src/components/ApplyChangesPanel.tsx",
        "src/components/fileExplorer/FileExplorer.tsx",
        "src/components/fileExplorer/FileExplorerItem.tsx",
        "src/components/FileViewerPanel.tsx",
        "src/components/MainLayout.tsx",
        "src/components/SettingsPanel.tsx",
        "src/hooks/useFileSystemLifecycle.ts",
        "src/utils/buildPrompt.ts"
      ]
    ],
    [
      "src/stores/logStore.ts",
      [
        "src/components/action-panel/CustomPromptsHelpModal.tsx",
        "src/components/action-panel/PromptContextMenu.tsx",
        "src/components/action-panel/TaskContextMenu.tsx",
        "src/components/action-panel/VariantsContextMenu.tsx",
        "src/components/ActionPanel.tsx",
        "src/components/AthanorApp.tsx",
        "src/components/AthanorTabs.tsx",
        "src/components/FileContextMenu.tsx",
        "src/components/FileViewerPanel.tsx",
        "src/components/MainLayout.tsx",
        "src/hooks/useFileDrop.ts",
        "src/hooks/useFileSystemLifecycle.ts",
        "src/services/athanorPresetService.ts",
        "src/stores/applyChangesStore.ts",
        "src/types/global.d.ts"
      ]
    ],
    [
      "src/stores/promptStore.ts",
      [
        "src/components/ActionPanel.tsx",
        "src/services/promptService.ts"
      ]
    ],
    [
      "src/stores/settingsStore.ts",
      [
        "src/components/ActionPanel.tsx",
        "src/components/ApplyChangesPanel.tsx",
        "src/components/AthanorApp.tsx",
        "src/components/AthanorTabs.tsx",
        "src/components/fileExplorer/FileExplorerItem.tsx",
        "src/components/FileViewerPanel.tsx",
        "src/components/SettingsPanel.tsx",
        "src/hooks/useDarkMode.ts",
        "src/hooks/useFileSystemLifecycle.ts",
        "src/stores/workbenchStore.ts"
      ]
    ],
    [
      "src/stores/taskStore.ts",
      [
        "src/components/ActionPanel.tsx",
        "src/services/promptService.ts"
      ]
    ],
    [
      "src/stores/workbenchStore.test.ts",
      []
    ],
    [
      "src/stores/workbenchStore.ts",
      [
        "src/actions/buildTaskAction.test.ts",
        "src/actions/buildTaskAction.ts",
        "src/actions/ManualCopyAction.test.ts",
        "src/actions/ManualCopyAction.ts",
        "src/commands/selectCommand.ts",
        "src/commands/taskCommand.ts",
        "src/components/ActionPanel.tsx",
        "src/components/ApplyChangesPanel.tsx",
        "src/components/AthanorApp.tsx",
        "src/components/fileExplorer/FileExplorerItem.tsx",
        "src/components/MainLayout.tsx",
        "src/hooks/useFileSystemLifecycle.ts",
        "src/stores/workbenchStore.test.ts"
      ]
    ],
    [
      "src/types/athanorPresets.ts",
      [
        "src/components/action-panel/SendViaApiControls.tsx",
        "src/services/athanorPresetService.ts"
      ]
    ],
    [
      "src/types/global.d.ts",
      [
        "electron/handlers/settingsHandlers.ts",
        "electron/services/SettingsService.ts",
        "src/actions/ApplyAiOutputAction.test.ts",
        "src/actions/ApplyAiOutputAction.ts",
        "src/commands/applyChangesCommand.ts",
        "src/commands/parser/applyChangesParser.ts",
        "src/commands/types.ts",
        "src/components/action-panel/SendViaApiControls.tsx",
        "src/components/ActionPanel.tsx",
        "src/components/ApplicationSettingsPane.tsx",
        "src/components/FileViewerPanel.tsx",
        "src/components/ProjectSettingsPane.tsx",
        "src/hooks/useFileSystemLifecycle.ts",
        "src/stores/applyChangesStore.ts",
        "src/stores/fileSystemStore.ts",
        "src/stores/settingsStore.ts",
        "src/stores/workbenchStore.ts",
        "src/utils/buildPrompt.ts",
        "src/utils/codebaseDocumentation.ts",
        "src/utils/configUtils.ts",
        "src/utils/fileOperations.ts"
      ]
    ],
    [
      "src/types/promptTypes.ts",
      [
        "src/components/action-panel/PromptContextMenu.tsx",
        "src/components/ActionPanel.tsx",
        "src/services/promptService.ts",
        "src/stores/promptStore.ts",
        "src/types/global.d.ts",
        "src/utils/buildPrompt.ts"
      ]
    ],
    [
      "src/types/taskTypes.ts",
      [
        "src/actions/buildTaskAction.test.ts",
        "src/actions/buildTaskAction.ts",
        "src/actions/descriptions.test.ts",
        "src/actions/descriptions.ts",
        "src/components/action-panel/TaskContextMenu.tsx",
        "src/services/promptService.ts",
        "src/stores/taskStore.ts",
        "src/types/global.d.ts"
      ]
    ],
    [
      "src/utils/buildPrompt.ts",
      [
        "src/actions/buildTaskAction.test.ts",
        "src/actions/buildTaskAction.ts",
        "src/components/ActionPanel.tsx",
        "src/utils/promptTemplates.ts"
      ]
    ],
    [
      "src/utils/codebaseDocumentation.ts",
      [
        "src/actions/ManualCopyAction.test.ts",
        "src/actions/ManualCopyAction.ts",
        "src/components/ApplyChangesPanel.tsx",
        "src/utils/buildPrompt.ts"
      ]
    ],
    [
      "src/utils/configUtils.ts",
      [
        "src/hooks/useFileSystemLifecycle.ts",
        "src/utils/buildPrompt.ts"
      ]
    ],
    [
      "src/utils/constants.ts",
      [
        "electron/handlers/coreHandlers.test.ts",
        "electron/handlers/coreHandlers.ts",
        "electron/ignoreRulesManager.ts",
        "electron/main.ts",
        "electron/services/FileService.ts",
        "electron/services/RelevanceEngineService.ts",
        "electron/services/SettingsService.ts",
        "src/actions/ManualCopyAction.test.ts",
        "src/actions/ManualCopyAction.ts",
        "src/components/action-panel/VariantsContextMenu.tsx",
        "src/components/ActionPanel.tsx",
        "src/components/ApplicationSettingsPane.tsx",
        "src/components/ApplyChangesPanel.tsx",
        "src/components/fileExplorer/FileExplorerItem.tsx",
        "src/components/ProjectSettingsPane.tsx",
        "src/components/SettingsPanel.tsx",
        "src/hooks/useFileDrop.ts",
        "src/hooks/useFileSystemLifecycle.ts",
        "src/services/fileSystemService.ts",
        "src/services/promptService.ts",
        "src/stores/fileSystemStore.ts",
        "src/stores/settingsStore.ts",
        "src/stores/workbenchStore.ts",
        "src/utils/buildPrompt.ts",
        "src/utils/codebaseDocumentation.ts",
        "src/utils/fileTextDetection.ts",
        "src/utils/projectInfoUtils.ts"
      ]
    ],
    [
      "src/utils/contextDetection.ts",
      [
        "src/components/ActionPanel.tsx"
      ]
    ],
    [
      "src/utils/extractTagContent.ts",
      [
        "src/utils/promptTemplates.ts"
      ]
    ],
    [
      "src/utils/fileOperations.ts",
      [
        "src/commands/parser/applyChangesParser.ts"
      ]
    ],
    [
      "src/utils/fileSelection.ts",
      [
        "src/components/fileExplorer/FileExplorerItem.tsx",
        "src/components/MainLayout.tsx",
        "src/stores/workbenchStore.test.ts",
        "src/stores/workbenchStore.ts",
        "src/utils/codebaseDocumentation.ts"
      ]
    ],
    [
      "src/utils/fileTextDetection.ts",
      [
        "src/components/FileViewerPanel.tsx",
        "src/utils/codebaseDocumentation.ts"
      ]
    ],
    [
      "src/utils/fileTree.ts",
      [
        "src/actions/buildTaskAction.test.ts",
        "src/actions/buildTaskAction.ts",
        "src/components/ActionPanel.tsx",
        "src/components/AthanorApp.tsx",
        "src/components/fileExplorer/FileExplorer.tsx",
        "src/components/fileExplorer/FileExplorerItem.tsx",
        "src/components/fileExplorer/hooks/useFileExplorer.ts",
        "src/components/MainLayout.tsx",
        "src/hooks/useFileSystemLifecycle.ts",
        "src/services/fileSystemService.ts",
        "src/stores/fileSystemStore.ts",
        "src/stores/workbenchStore.test.ts",
        "src/stores/workbenchStore.ts",
        "src/utils/buildPrompt.ts",
        "src/utils/codebaseDocumentation.ts",
        "src/utils/configUtils.ts",
        "src/utils/fileSelection.ts"
      ]
    ],
    [
      "src/utils/languageMapping.ts",
      [
        "src/components/FileViewerPanel.tsx"
      ]
    ],
    [
      "src/utils/projectInfoUtils.ts",
      [
        "src/utils/configUtils.ts"
      ]
    ],
    [
      "src/utils/promptTemplates.ts",
      [
        "src/utils/buildPrompt.ts"
      ]
    ],
    [
      "src/utils/tokenCount.ts",
      [
        "src/actions/ManualCopyAction.test.ts",
        "src/actions/ManualCopyAction.ts",
        "src/commands/applyChangesCommand.ts"
      ]
    ],
    [
      "tailwind.config.js",
      []
    ],
    [
      "tests/__mocks__/electron.ts",
      []
    ],
    [
      "tsconfig.json",
      []
    ],
    [
      "TUTORIAL.md",
      []
    ],
    [
      "webpack.main.config.js",
      []
    ],
    [
      "webpack.preload.config.js",
      []
    ],
    [
      "webpack.renderer.config.js",
      []
    ]
  ],
  "fileMentions": [
    [
      ".athignore",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/modules/llm/main/config.ts",
        "package.json",
        "PROJECT.md"
      ]
    ],
    [
      ".eslintrc.js",
      [
        "tests/__mocks__/electron.ts",
        "tsconfig.json"
      ]
    ],
    [
      ".github/ISSUE_TEMPLATE/bug_report.md",
      [
        "src/commands/types.ts"
      ]
    ],
    [
      ".github/ISSUE_TEMPLATE/config.yml",
      [
        "electron/main.ts",
        "electron/modules/llm/main/config.ts",
        "TUTORIAL.md"
      ]
    ],
    [
      ".github/workflows/auto-tag.yml",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/main.ts",
        "electron/modules/llm/main/config.ts",
        "package.json"
      ]
    ],
    [
      ".github/workflows/pr-checks.yml",
      [
        "electron/main.ts",
        "scripts/check-dco.sh"
      ]
    ],
    [
      "CHANGELOG.md",
      [
        ".github/ISSUE_TEMPLATE/bug_report.md",
        ".github/ISSUE_TEMPLATE/config.yml",
        ".github/ISSUE_TEMPLATE/feature_request.md",
        ".github/workflows/auto-tag.yml",
        ".github/workflows/pr-checks.yml",
        "CONTRIBUTING.md",
        "electron/handlers/coreHandlers.test.ts",
        "electron/handlers/coreHandlers.ts",
        "electron/ignoreRulesManager.ts",
        "electron/main.ts",
        "electron/modules/llm/main/config.ts",
        "README.md",
        "electron/services/FileService.ts",
        "electron/services/PathUtils.ts",
        "package.json",
        "PROJECT.md",
        "resources/prompts/custom_prompt_designer.md",
        "resources/prompts/custom_task_designer.md",
        "resources/prompts/example_prompt.xml",
        "resources/prompts/example_task.xml",
        "resources/prompts/task_pr_changelog.xml",
        "scripts/check-dco.sh",
        "src/actions/ApplyAiOutputAction.ts",
        "src/actions/buildTaskAction.ts",
        "src/commands/descriptions.ts",
        "src/actions/ManualCopyAction.ts",
        "src/components/AthanorApp.tsx",
        "src/components/fileExplorer/FileExplorer.tsx",
        "src/config/athanorModelPresets.json",
        "src/hooks/useFileSystemLifecycle.ts",
        "src/services/promptService.ts",
        "src/stores/fileSystemStore.ts",
        "src/stores/workbenchStore.ts",
        "TUTORIAL.md"
      ]
    ],
    [
      "common/types/file-service.ts",
      [
        "src/commands/types.ts",
        "electron/services/PathUtils.ts"
      ]
    ],
    [
      "CONTRIBUTING.md",
      [
        "electron/ignoreRulesManager.ts",
        "electron/ipcHandlers.ts",
        "electron/main.ts",
        "src/commands/types.ts",
        "README.md",
        "electron/modules/secure-api-storage/common/errors.ts",
        "electron/preload.ts",
        "electron/services/FileService.test.ts",
        "electron/services/FileService.ts",
        "package.json",
        "PROJECT.md",
        "src/components/AthanorApp.tsx",
        "src/components/fileExplorer/FileExplorer.tsx",
        "src/components/MainLayout.tsx",
        "src/services/fileSystemService.ts",
        "src/stores/fileSystemStore.ts",
        "src/stores/workbenchStore.ts",
        "src/types/global.d.ts",
        "tests/__mocks__/electron.ts",
        "TUTORIAL.md"
      ]
    ],
    [
      "electron/handlers/contextHandlers.ts",
      [
        "electron/services/RelevanceEngineService.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/handlers/coreHandlers.test.ts",
      [
        "electron/handlers/coreHandlers.ts",
        "electron/ipcHandlers.ts",
        "README.md",
        "electron/modules/secure-api-storage/common/errors.ts",
        "electron/services/FileService.ts",
        "electron/services/SettingsService.ts",
        "electron/windowManager.ts",
        "src/utils/constants.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/handlers/coreHandlers.ts",
      [
        "electron/services/FileService.ts",
        "electron/services/SettingsService.ts",
        "electron/windowManager.ts",
        "src/utils/constants.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/handlers/fileOperationHandlers.ts",
      [
        "electron/services/FileService.ts",
        "electron/services/PathUtils.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/handlers/fileWatchHandlers.ts",
      [
        "electron/services/FileService.ts",
        "electron/services/PathUtils.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/handlers/llmIpc.ts",
      [
        "electron/main.ts",
        "src/commands/types.ts",
        "electron/modules/llm/main/LLMServiceMain.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/handlers/secureApiKeyIpc.ts",
      [
        "electron/main.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "electron/modules/secure-api-storage/main/ApiKeyServiceMain.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/handlers/settingsHandlers.ts",
      [
        "electron/main.ts",
        "src/commands/types.ts",
        "electron/services/SettingsService.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/ignoreRulesManager.test.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/ignoreRulesManager.ts",
        "electron/main.ts",
        "electron/modules/llm/main/config.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "electron/services/PathUtils.ts",
        "package.json"
      ]
    ],
    [
      "electron/ignoreRulesManager.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/modules/llm/main/config.ts",
        "electron/services/PathUtils.ts",
        "src/utils/constants.ts"
      ]
    ],
    [
      "electron/ipcHandlers.ts",
      [
        "electron/handlers/contextHandlers.ts",
        "electron/handlers/coreHandlers.ts",
        "electron/handlers/fileOperationHandlers.ts",
        "electron/handlers/fileWatchHandlers.ts",
        "electron/handlers/llmIpc.ts",
        "electron/handlers/secureApiKeyIpc.ts",
        "electron/handlers/settingsHandlers.ts",
        "electron/main.ts",
        "electron/modules/llm/main/LLMServiceMain.ts",
        "electron/modules/secure-api-storage/main/ApiKeyServiceMain.ts",
        "electron/services/FileService.ts",
        "electron/services/ProjectGraphService.ts",
        "electron/services/RelevanceEngineService.ts",
        "electron/services/SettingsService.ts",
        "electron/windowManager.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/main.ts",
      [
        "electron/ipcHandlers.ts",
        "electron/modules/llm/main/LLMServiceMain.ts",
        "electron/modules/secure-api-storage/main/ApiKeyServiceMain.ts",
        "electron/services/FileService.ts",
        "electron/services/GitService.ts",
        "electron/services/ProjectGraphService.ts",
        "electron/services/RelevanceEngineService.ts",
        "electron/services/SettingsService.ts",
        "electron/windowManager.ts",
        "electron/workers/projectAnalysisWorker.ts",
        "package.json",
        "src/App.tsx",
        "src/utils/constants.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/modules/llm/common/types.ts",
      [
        "src/commands/types.ts",
        "src/commands/parser/index.ts",
        "src/index.css",
        "src/index.tsx"
      ]
    ],
    [
      "electron/modules/llm/main/clients/adapterErrorUtils.ts",
      [
        "src/commands/types.ts",
        "electron/modules/secure-api-storage/common/errors.ts"
      ]
    ],
    [
      "electron/modules/llm/main/clients/AnthropicClientAdapter.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "src/commands/types.ts",
        "electron/modules/llm/main/clients/adapterErrorUtils.ts",
        "electron/modules/llm/main/config.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "src/commands/parser/index.ts",
        "src/index.css",
        "src/index.tsx"
      ]
    ],
    [
      "electron/modules/llm/main/clients/GeminiClientAdapter.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "src/commands/types.ts",
        "electron/modules/llm/main/clients/adapterErrorUtils.ts",
        "electron/modules/llm/main/config.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "src/commands/parser/index.ts",
        "src/index.css",
        "src/index.tsx"
      ]
    ],
    [
      "electron/modules/llm/main/clients/MockClientAdapter.ts",
      [
        "src/commands/types.ts",
        "src/commands/parser/index.ts",
        "src/index.css",
        "src/index.tsx"
      ]
    ],
    [
      "electron/modules/llm/main/clients/OpenAIClientAdapter.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "src/commands/types.ts",
        "electron/modules/llm/main/clients/adapterErrorUtils.ts",
        "electron/modules/llm/main/config.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "src/commands/parser/index.ts",
        "src/index.css",
        "src/index.tsx"
      ]
    ],
    [
      "electron/modules/llm/main/clients/types.ts",
      [
        "src/commands/types.ts",
        "electron/modules/secure-api-storage/common/errors.ts"
      ]
    ],
    [
      "electron/modules/llm/main/config.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/main.ts",
        "src/commands/types.ts",
        "electron/modules/llm/main/clients/AnthropicClientAdapter.ts",
        "electron/modules/llm/main/clients/GeminiClientAdapter.ts",
        "electron/modules/llm/main/clients/OpenAIClientAdapter.ts",
        "electron/modules/llm/main/LLMServiceMain.ts",
        "electron/modules/secure-api-storage/common/errors.ts"
      ]
    ],
    [
      "electron/modules/llm/main/LLMServiceMain.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/main.ts",
        "src/commands/types.ts",
        "electron/modules/llm/main/clients/AnthropicClientAdapter.ts",
        "electron/modules/llm/main/clients/MockClientAdapter.ts",
        "electron/modules/llm/main/clients/OpenAIClientAdapter.ts",
        "electron/modules/llm/main/config.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "src/commands/parser/index.ts",
        "electron/modules/secure-api-storage/main/ApiKeyServiceMain.ts",
        "src/index.css",
        "src/index.tsx"
      ]
    ],
    [
      "electron/modules/llm/README.md",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/handlers/llmIpc.ts",
        "electron/main.ts",
        "src/commands/types.ts",
        "electron/modules/llm/main/clients/adapterErrorUtils.ts",
        "electron/modules/llm/main/clients/AnthropicClientAdapter.ts",
        "electron/modules/llm/main/clients/MockClientAdapter.ts",
        "electron/modules/llm/main/clients/OpenAIClientAdapter.ts",
        "electron/modules/llm/main/config.ts",
        "electron/modules/llm/main/LLMServiceMain.ts",
        "README.md",
        "electron/modules/llm/renderer/LLMServiceRenderer.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "electron/modules/secure-api-storage/main/ApiKeyServiceMain.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/modules/llm/renderer/LLMServiceRenderer.ts",
      [
        "electron/main.ts",
        "src/commands/types.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "electron/preload.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/index.ts",
      [
        "electron/main.ts",
        "src/commands/types.ts",
        "electron/modules/secure-api-storage/common/errors.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/AnthropicProvider.ts",
      [
        "src/commands/types.ts",
        "electron/modules/secure-api-storage/common/providers/ProviderInterface.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/GeminiProvider.ts",
      [
        "src/commands/types.ts",
        "electron/modules/secure-api-storage/common/providers/ProviderInterface.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/index.ts",
      [
        "electron/modules/secure-api-storage/common/providers/AnthropicProvider.ts",
        "electron/modules/secure-api-storage/common/providers/GeminiProvider.ts",
        "electron/modules/secure-api-storage/common/providers/MistralProvider.ts",
        "electron/modules/secure-api-storage/common/providers/OpenAIProvider.ts",
        "electron/modules/secure-api-storage/common/providers/ProviderInterface.ts",
        "electron/modules/secure-api-storage/common/providers/ProviderService.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/MistralProvider.ts",
      [
        "src/commands/types.ts",
        "electron/modules/secure-api-storage/common/providers/ProviderInterface.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/OpenAIProvider.ts",
      [
        "src/commands/types.ts",
        "electron/modules/secure-api-storage/common/providers/ProviderInterface.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/ProviderInterface.ts",
      [
        "src/commands/types.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/providers/ProviderService.ts",
      [
        "src/commands/types.ts",
        "electron/modules/secure-api-storage/common/providers/AnthropicProvider.ts",
        "electron/modules/secure-api-storage/common/providers/GeminiProvider.ts",
        "electron/modules/secure-api-storage/common/providers/MistralProvider.ts",
        "electron/modules/secure-api-storage/common/providers/OpenAIProvider.ts",
        "electron/modules/secure-api-storage/common/providers/ProviderInterface.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/common/types.ts",
      [
        "electron/main.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/main/ApiKeyServiceMain.ts",
      [
        "electron/main.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "electron/modules/secure-api-storage/common/providers/ProviderService.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/main/index.ts",
      [
        "electron/main.ts",
        "electron/modules/secure-api-storage/main/ApiKeyServiceMain.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/README.md",
      [
        "electron/handlers/secureApiKeyIpc.ts",
        "electron/main.ts",
        "src/commands/types.ts",
        "electron/modules/llm/main/LLMServiceMain.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "src/commands/parser/index.ts",
        "electron/modules/secure-api-storage/common/providers/AnthropicProvider.ts",
        "electron/modules/secure-api-storage/common/providers/GeminiProvider.ts",
        "electron/modules/secure-api-storage/common/providers/MistralProvider.ts",
        "electron/modules/secure-api-storage/common/providers/OpenAIProvider.ts",
        "electron/modules/secure-api-storage/common/providers/ProviderInterface.ts",
        "electron/modules/secure-api-storage/common/providers/ProviderService.ts",
        "electron/modules/secure-api-storage/main/ApiKeyServiceMain.ts",
        "electron/modules/secure-api-storage/renderer/ApiKeyServiceRenderer.ts",
        "electron/preload.ts",
        "src/index.css",
        "src/index.tsx",
        "src/types/global.d.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/renderer/ApiKeyServiceRenderer.ts",
      [
        "electron/main.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "electron/modules/secure-api-storage/common/providers/ProviderService.ts",
        "electron/modules/secure-api-storage/main/ApiKeyServiceMain.ts",
        "electron/preload.ts"
      ]
    ],
    [
      "electron/modules/secure-api-storage/renderer/index.ts",
      [
        "electron/modules/secure-api-storage/renderer/ApiKeyServiceRenderer.ts"
      ]
    ],
    [
      "electron/preload.ts",
      [
        "electron/handlers/coreHandlers.ts",
        "src/commands/types.ts",
        "electron/modules/llm/renderer/LLMServiceRenderer.ts",
        "electron/services/FileService.ts",
        "electron/services/PathUtils.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/services/DependencyScanner.test.ts",
      [
        "electron/main.ts",
        "src/commands/types.ts",
        "electron/services/DependencyScanner.ts"
      ]
    ],
    [
      "electron/services/FileService.test.ts",
      [
        "electron/ignoreRulesManager.ts",
        "electron/services/FileService.ts",
        "electron/services/PathUtils.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/services/FileService.ts",
      [
        "common/types/file-service.ts",
        "electron/ignoreRulesManager.ts",
        "electron/main.ts",
        "src/commands/types.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "electron/services/PathUtils.ts",
        "src/utils/constants.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/services/GitService.test.ts",
      [
        "README.md",
        "electron/modules/secure-api-storage/common/errors.ts",
        "electron/services/GitService.ts"
      ]
    ],
    [
      "electron/services/GitService.ts",
      [
        "common/types/git-service.ts",
        "src/commands/types.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "electron/services/PathUtils.ts"
      ]
    ],
    [
      "electron/services/PathUtils.test.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/modules/llm/main/config.ts",
        "src/commands/parser/index.ts",
        "electron/services/PathUtils.ts",
        "src/index.css",
        "src/index.tsx"
      ]
    ],
    [
      "electron/services/PathUtils.ts",
      [
        "electron/main.ts"
      ]
    ],
    [
      "electron/services/ProjectGraphService.ts",
      [
        "common/types/git-service.ts",
        "src/commands/types.ts",
        "src/commands/parser/index.ts",
        "electron/services/DependencyScanner.ts",
        "electron/services/FileService.ts",
        "electron/services/PathUtils.ts",
        "electron/services/RelevanceEngineService.ts",
        "src/index.css",
        "src/index.tsx"
      ]
    ],
    [
      "electron/services/PromptUtils.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/main.ts",
        "electron/modules/llm/main/config.ts"
      ]
    ],
    [
      "electron/services/RelevanceEngineService.ts",
      [
        "common/types/git-service.ts",
        "src/commands/types.ts",
        "src/commands/parser/index.ts",
        "electron/services/DependencyScanner.ts",
        "electron/services/FileService.ts",
        "electron/services/PathUtils.ts",
        "electron/services/ProjectGraphService.ts",
        "electron/services/PromptUtils.ts",
        "electron/services/TaskAnalysisUtils.ts",
        "src/index.css",
        "src/index.tsx",
        "src/utils/constants.ts",
        "src/utils/tokenCount.ts"
      ]
    ],
    [
      "electron/services/SettingsService.ts",
      [
        "src/commands/types.ts",
        "electron/services/FileService.ts",
        "src/utils/constants.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/services/TaskAnalysisUtils.test.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/modules/llm/main/config.ts",
        "electron/services/FileService.ts",
        "electron/services/PathUtils.ts",
        "electron/services/TaskAnalysisUtils.ts",
        "src/commands/descriptions.ts",
        "src/utils/constants.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/services/TaskAnalysisUtils.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/modules/llm/main/config.ts",
        "electron/services/wordFilters.ts"
      ]
    ],
    [
      "electron/services/wordFilters.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/main.ts",
        "src/commands/types.ts",
        "electron/modules/llm/main/config.ts",
        "src/commands/parser/index.ts",
        "package.json",
        "src/commands/descriptions.ts",
        "src/index.css",
        "src/index.tsx"
      ]
    ],
    [
      "electron/windowManager.ts",
      [
        "electron/main.ts",
        "electron/preload.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "electron/workers/projectAnalysisWorker.ts",
      [
        "electron/main.ts",
        "electron/services/FileService.ts",
        "electron/services/GitService.ts",
        "electron/services/ProjectGraphService.ts"
      ]
    ],
    [
      "FEATURE.md",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/ignoreRulesManager.ts",
        "electron/main.ts",
        "src/commands/types.ts",
        "electron/modules/llm/main/config.ts",
        "README.md",
        "electron/services/DependencyScanner.ts",
        "electron/services/FileService.ts",
        "electron/services/GitService.ts",
        "electron/services/ProjectGraphService.ts",
        "electron/services/RelevanceEngineService.ts",
        "package.json",
        "src/components/ActionPanel.tsx",
        "src/components/fileExplorer/FileExplorer.tsx",
        "src/components/fileExplorer/FileExplorerItem.tsx",
        "src/stores/contextStore.ts",
        "src/stores/workbenchStore.ts",
        "src/types/global.d.ts",
        "src/utils/buildPrompt.ts",
        "src/utils/constants.ts"
      ]
    ],
    [
      "forge.config.js",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/main.ts",
        "electron/modules/llm/main/config.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "src/commands/parser/index.ts",
        "electron/preload.ts",
        "src/index.css",
        "src/index.tsx",
        "tests/__mocks__/electron.ts",
        "webpack.main.config.js",
        "webpack.preload.config.js",
        "webpack.renderer.config.js"
      ]
    ],
    [
      "jest.config.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/modules/llm/main/config.ts",
        "tests/__mocks__/electron.ts",
        "tsconfig.json"
      ]
    ],
    [
      "package.json",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/main.ts",
        "src/commands/types.ts",
        "electron/modules/llm/main/config.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "PROJECT.md",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/handlers/coreHandlers.ts",
        "electron/handlers/fileOperationHandlers.ts",
        "electron/handlers/fileWatchHandlers.ts",
        "electron/ignoreRulesManager.ts",
        "electron/ipcHandlers.ts",
        "electron/main.ts",
        "src/commands/types.ts",
        "electron/modules/llm/main/config.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "electron/preload.ts",
        "electron/services/FileService.test.ts",
        "electron/services/FileService.ts",
        "electron/services/PathUtils.ts",
        "electron/services/SettingsService.ts",
        "package.json",
        "src/App.tsx",
        "src/components/action-panel/PromptContextMenu.tsx",
        "src/components/action-panel/TaskContextMenu.tsx",
        "src/components/ActionPanel.tsx",
        "src/components/ApplyChangesPanel.tsx",
        "src/components/AthanorApp.tsx",
        "src/components/FileContextMenu.tsx",
        "src/components/fileExplorer/FileExplorer.tsx",
        "src/components/MainLayout.tsx",
        "src/hooks/useFileDrop.ts",
        "src/services/fileSystemService.ts",
        "src/services/promptService.ts",
        "src/stores/applyChangesStore.ts",
        "src/stores/fileSystemStore.ts",
        "src/stores/logStore.ts",
        "src/stores/promptStore.ts",
        "src/stores/taskStore.ts",
        "src/stores/workbenchStore.ts",
        "src/types/global.d.ts",
        "src/utils/buildPrompt.ts",
        "src/utils/constants.ts",
        "src/utils/contextDetection.ts",
        "src/utils/extractTagContent.ts",
        "src/utils/fileTree.ts",
        "src/utils/tokenCount.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "README.md",
      [
        "CONTRIBUTING.md",
        "package.json",
        "src/components/SettingsPanel.tsx",
        "TUTORIAL.md"
      ]
    ],
    [
      "resources/files/default_athignore",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/modules/llm/main/config.ts",
        "package.json",
        "PROJECT.md"
      ]
    ],
    [
      "resources/prompts/custom_prompt_designer.md",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/main.ts",
        "electron/modules/llm/main/config.ts",
        "README.md",
        "resources/prompts/prompt_architect.xml",
        "resources/prompts/prompt_autoselect.xml",
        "resources/prompts/prompt_develop.xml",
        "resources/prompts/prompt_query.xml",
        "src/commands/descriptions.ts"
      ]
    ],
    [
      "resources/prompts/custom_task_designer.md",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "CHANGELOG.md",
        "CONTRIBUTING.md",
        "electron/main.ts",
        "src/commands/types.ts",
        "electron/modules/llm/main/config.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "jest.config.ts",
        "package.json",
        "resources/prompts/example_task.xml",
        "resources/prompts/prompt_develop.xml",
        "resources/prompts/task_ai_summary.xml",
        "resources/prompts/task_pr_changelog.xml",
        "resources/prompts/task_refactor_files.xml",
        "resources/prompts/task_unit_tests.xml",
        "src/commands/descriptions.ts"
      ]
    ],
    [
      "resources/prompts/example_prompt.xml",
      [
        "electron/main.ts"
      ]
    ],
    [
      "resources/prompts/example_task.xml",
      [
        "electron/main.ts",
        "resources/prompts/task_ai_summary.xml",
        "resources/prompts/task_unit_tests.xml"
      ]
    ],
    [
      "resources/prompts/prompt_metaprompt.xml",
      [
        "electron/main.ts",
        "src/utils/constants.ts"
      ]
    ],
    [
      "resources/prompts/prompt_query.xml",
      [
        "electron/main.ts"
      ]
    ],
    [
      "resources/prompts/task_ai_summary.xml",
      [
        "electron/main.ts",
        "src/commands/descriptions.ts"
      ]
    ],
    [
      "resources/prompts/task_pr_changelog.xml",
      [
        "CHANGELOG.md",
        "CONTRIBUTING.md",
        "electron/main.ts",
        "src/commands/descriptions.ts"
      ]
    ],
    [
      "resources/prompts/task_refactor_files.xml",
      [
        "src/commands/types.ts",
        "package.json"
      ]
    ],
    [
      "resources/prompts/task_unit_tests.xml",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/modules/llm/main/config.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "jest.config.ts"
      ]
    ],
    [
      "scripts/check-dco.sh",
      [
        "CONTRIBUTING.md",
        "electron/main.ts"
      ]
    ],
    [
      "src/actions/ApplyAiOutputAction.test.ts",
      [
        "src/commands/types.ts",
        "src/actions/ApplyAiOutputAction.ts",
        "src/stores/applyChangesStore.ts"
      ]
    ],
    [
      "src/actions/ApplyAiOutputAction.ts",
      [
        "src/commands/types.ts",
        "src/stores/applyChangesStore.ts"
      ]
    ],
    [
      "src/actions/buildTaskAction.test.ts",
      [
        "src/commands/types.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "src/actions/buildTaskAction.ts",
        "src/stores/contextStore.ts",
        "src/stores/workbenchStore.ts",
        "src/types/taskTypes.ts",
        "src/utils/buildPrompt.ts",
        "src/utils/fileTree.ts"
      ]
    ],
    [
      "src/actions/buildTaskAction.ts",
      [
        "src/commands/types.ts",
        "src/stores/contextStore.ts",
        "src/stores/taskStore.ts",
        "src/stores/workbenchStore.ts",
        "src/types/taskTypes.ts",
        "src/utils/buildPrompt.ts",
        "src/utils/fileTree.ts"
      ]
    ],
    [
      "src/actions/descriptions.test.ts",
      [
        "src/commands/types.ts",
        "src/commands/descriptions.ts",
        "src/types/taskTypes.ts"
      ]
    ],
    [
      "src/actions/descriptions.ts",
      [
        "src/commands/types.ts",
        "src/types/taskTypes.ts"
      ]
    ],
    [
      "src/actions/index.ts",
      [
        "src/commands/types.ts",
        "src/actions/ApplyAiOutputAction.ts",
        "src/actions/buildTaskAction.ts",
        "src/commands/descriptions.ts",
        "src/actions/ManualCopyAction.ts"
      ]
    ],
    [
      "src/actions/ManualCopyAction.test.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/modules/llm/main/config.ts",
        "src/actions/ManualCopyAction.ts",
        "src/stores/fileSystemStore.ts",
        "src/stores/workbenchStore.ts",
        "src/utils/codebaseDocumentation.ts",
        "src/utils/constants.ts",
        "src/utils/fileTree.ts",
        "src/utils/tokenCount.ts"
      ]
    ],
    [
      "src/actions/ManualCopyAction.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/modules/llm/main/config.ts",
        "src/stores/fileSystemStore.ts",
        "src/stores/workbenchStore.ts",
        "src/utils/codebaseDocumentation.ts",
        "src/utils/constants.ts",
        "src/utils/fileTree.ts",
        "src/utils/tokenCount.ts"
      ]
    ],
    [
      "src/actions/types.ts",
      [
        "src/commands/types.ts"
      ]
    ],
    [
      "src/App.tsx",
      [
        "electron/main.ts",
        "src/components/AthanorApp.tsx"
      ]
    ],
    [
      "src/commands/applyChangesCommand.ts",
      [
        "src/commands/types.ts",
        "src/commands/parser/applyChangesParser.ts",
        "src/utils/tokenCount.ts"
      ]
    ],
    [
      "src/commands/descriptions.ts",
      [
        "src/commands/types.ts"
      ]
    ],
    [
      "src/commands/index.ts",
      [
        "src/commands/types.ts",
        "src/commands/descriptions.ts",
        "src/commands/applyChangesCommand.ts",
        "src/commands/selectCommand.ts",
        "src/commands/taskCommand.ts",
        "src/utils/constants.ts"
      ]
    ],
    [
      "src/commands/parser/applyChangesParser.ts",
      [
        "src/commands/types.ts",
        "src/commands/parser/index.ts",
        "src/actions/ManualCopyAction.ts",
        "src/index.css",
        "src/index.tsx",
        "src/utils/extractTagContent.ts",
        "src/utils/fileOperations.ts"
      ]
    ],
    [
      "src/commands/parser/commandParser.ts",
      [
        "src/commands/types.ts"
      ]
    ],
    [
      "src/commands/parser/index.ts",
      [
        "src/commands/types.ts",
        "src/commands/parser/commandParser.ts"
      ]
    ],
    [
      "src/commands/selectCommand.ts",
      [
        "src/stores/fileSystemStore.ts",
        "src/stores/workbenchStore.ts",
        "src/utils/fileTree.ts"
      ]
    ],
    [
      "src/commands/taskCommand.ts",
      [
        "src/stores/workbenchStore.ts"
      ]
    ],
    [
      "src/commands/types.ts",
      [
        "src/utils/constants.ts"
      ]
    ],
    [
      "src/components/action-panel/CustomPromptsHelpModal.tsx",
      [
        "electron/main.ts",
        "resources/prompts/custom_prompt_designer.md",
        "resources/prompts/custom_task_designer.md",
        "src/actions/ManualCopyAction.ts",
        "src/stores/logStore.ts",
        "TUTORIAL.md"
      ]
    ],
    [
      "src/components/action-panel/PromptContextMenu.tsx",
      [
        "src/commands/types.ts",
        "src/components/action-panel/VariantsContextMenu.tsx",
        "src/stores/logStore.ts",
        "src/types/promptTypes.ts"
      ]
    ],
    [
      "src/components/action-panel/SelectedFilesDisplay.tsx",
      [
        "src/commands/parser/index.ts",
        "src/index.css",
        "src/index.tsx",
        "src/stores/contextStore.ts",
        "src/utils/fileTree.ts"
      ]
    ],
    [
      "src/components/action-panel/SendViaApiControls.tsx",
      [
        "src/commands/types.ts",
        "src/actions/ApplyAiOutputAction.ts",
        "src/services/athanorPresetService.ts",
        "src/stores/applyChangesStore.ts",
        "src/types/athanorPresets.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "src/components/action-panel/TaskContextMenu.tsx",
      [
        "src/commands/types.ts",
        "src/components/action-panel/VariantsContextMenu.tsx",
        "src/stores/logStore.ts",
        "src/types/taskTypes.ts"
      ]
    ],
    [
      "src/components/action-panel/VariantsContextMenu.tsx",
      [
        "src/stores/logStore.ts",
        "src/utils/constants.ts"
      ]
    ],
    [
      "src/components/ActionPanel.tsx",
      [
        "src/commands/types.ts",
        "src/commands/parser/index.ts",
        "src/actions/buildTaskAction.ts",
        "src/actions/ManualCopyAction.ts",
        "src/components/action-panel/CustomPromptsHelpModal.tsx",
        "src/components/action-panel/PromptContextMenu.tsx",
        "src/components/action-panel/SelectedFilesDisplay.tsx",
        "src/components/action-panel/SendViaApiControls.tsx",
        "src/components/action-panel/TaskContextMenu.tsx",
        "src/hooks/useFileDrop.ts",
        "src/index.css",
        "src/index.tsx",
        "src/stores/contextStore.ts",
        "src/stores/fileSystemStore.ts",
        "src/stores/logStore.ts",
        "src/stores/promptStore.ts",
        "src/stores/settingsStore.ts",
        "src/stores/taskStore.ts",
        "src/stores/workbenchStore.ts",
        "src/types/promptTypes.ts",
        "src/utils/buildPrompt.ts",
        "src/utils/constants.ts",
        "src/utils/contextDetection.ts",
        "src/utils/fileTree.ts"
      ]
    ],
    [
      "src/components/ApiKeyManagementPane.tsx",
      [
        "electron/modules/secure-api-storage/common/errors.ts",
        "electron/modules/secure-api-storage/renderer/ApiKeyServiceRenderer.ts",
        "src/services/athanorPresetService.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "src/components/ApplicationSettingsPane.tsx",
      [
        "src/commands/types.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "src/utils/constants.ts"
      ]
    ],
    [
      "src/components/ApplyChangesPanel.tsx",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/modules/llm/main/config.ts",
        "src/commands/parser/index.ts",
        "src/index.css",
        "src/index.tsx",
        "src/stores/applyChangesStore.ts",
        "src/stores/fileSystemStore.ts",
        "src/stores/settingsStore.ts",
        "src/stores/workbenchStore.ts",
        "src/utils/codebaseDocumentation.ts",
        "src/utils/constants.ts",
        "src/utils/fileTree.ts"
      ]
    ],
    [
      "src/components/AthanorApp.tsx",
      [
        "electron/main.ts",
        "src/components/AthanorTabs.tsx",
        "src/components/MainLayout.tsx",
        "src/components/ProjectCreationDialog.tsx",
        "src/hooks/useFileSystemLifecycle.ts",
        "src/stores/applyChangesStore.ts",
        "src/stores/contextStore.ts",
        "src/stores/logStore.ts",
        "src/stores/settingsStore.ts",
        "src/stores/workbenchStore.ts",
        "src/utils/fileTree.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "src/components/AthanorTabs.tsx",
      [
        "src/components/CommandButton.tsx",
        "src/stores/applyChangesStore.ts",
        "src/stores/logStore.ts",
        "src/stores/settingsStore.ts"
      ]
    ],
    [
      "src/components/CommandButton.tsx",
      [
        "src/actions/ApplyAiOutputAction.ts",
        "src/stores/commandStore.ts"
      ]
    ],
    [
      "src/components/FileContextMenu.tsx",
      [
        "electron/main.ts",
        "src/stores/logStore.ts"
      ]
    ],
    [
      "src/components/fileExplorer/FileExplorer.tsx",
      [
        "src/components/FileContextMenu.tsx",
        "src/components/fileExplorer/FileExplorerItem.tsx",
        "src/components/fileExplorer/hooks/useFileExplorer.ts",
        "src/stores/fileSystemStore.ts",
        "src/utils/fileTree.ts"
      ]
    ],
    [
      "src/components/fileExplorer/FileExplorerItem.tsx",
      [
        "src/hooks/useDarkMode.ts",
        "src/stores/contextStore.ts",
        "src/stores/fileSystemStore.ts",
        "src/stores/settingsStore.ts",
        "src/stores/workbenchStore.ts",
        "src/utils/constants.ts",
        "src/utils/fileSelection.ts",
        "src/utils/fileTree.ts"
      ]
    ],
    [
      "src/components/fileExplorer/hooks/useFileExplorer.ts",
      [
        "src/utils/fileTree.ts"
      ]
    ],
    [
      "src/components/FileViewerPanel.tsx",
      [
        "src/commands/types.ts",
        "src/actions/ManualCopyAction.ts",
        "src/components/AthanorTabs.tsx",
        "src/stores/applyChangesStore.ts",
        "src/stores/commandStore.ts",
        "src/stores/fileSystemStore.ts",
        "src/stores/logStore.ts",
        "src/stores/settingsStore.ts",
        "src/utils/fileTextDetection.ts",
        "src/utils/languageMapping.ts"
      ]
    ],
    [
      "src/components/MainLayout.tsx",
      [
        "src/actions/ManualCopyAction.ts",
        "src/components/ActionPanel.tsx",
        "src/components/ApplyChangesPanel.tsx",
        "src/components/AthanorTabs.tsx",
        "src/components/fileExplorer/FileExplorer.tsx",
        "src/components/FileViewerPanel.tsx",
        "src/components/SettingsPanel.tsx",
        "src/hooks/useLogPanelResize.ts",
        "src/hooks/usePanelResize.ts",
        "src/stores/contextStore.ts",
        "src/stores/fileSystemStore.ts",
        "src/stores/logStore.ts",
        "src/stores/workbenchStore.ts",
        "src/utils/fileSelection.ts",
        "src/utils/fileTree.ts"
      ]
    ],
    [
      "src/components/ProjectSettingsPane.tsx",
      [
        "src/commands/types.ts",
        "README.md",
        "electron/modules/secure-api-storage/common/errors.ts",
        "PROJECT.md",
        "src/utils/constants.ts"
      ]
    ],
    [
      "src/components/SettingsPanel.tsx",
      [
        "electron/modules/secure-api-storage/common/errors.ts",
        "src/components/ApiKeyManagementPane.tsx",
        "src/components/ApplicationSettingsPane.tsx",
        "src/components/ProjectSettingsPane.tsx",
        "src/stores/fileSystemStore.ts",
        "src/stores/settingsStore.ts",
        "src/utils/constants.ts",
        "src/utils/fileTree.ts"
      ]
    ],
    [
      "src/hooks/useDarkMode.ts",
      [
        "src/stores/settingsStore.ts"
      ]
    ],
    [
      "src/hooks/useFileDrop.ts",
      [
        "src/stores/logStore.ts",
        "src/utils/constants.ts"
      ]
    ],
    [
      "src/hooks/useFileSystemLifecycle.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/main.ts",
        "src/commands/types.ts",
        "electron/modules/llm/main/config.ts",
        "src/services/fileIgnoreService.ts",
        "src/services/fileSystemService.ts",
        "src/services/promptService.ts",
        "src/stores/contextStore.ts",
        "src/stores/fileSystemStore.ts",
        "src/stores/logStore.ts",
        "src/stores/settingsStore.ts",
        "src/stores/workbenchStore.ts",
        "src/utils/configUtils.ts",
        "src/utils/constants.ts",
        "src/utils/fileTree.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "src/index.css",
      [
        "src/commands/parser/index.ts",
        "src/index.tsx"
      ]
    ],
    [
      "src/index.tsx",
      [
        "src/commands/parser/index.ts",
        "src/App.tsx",
        "src/index.css"
      ]
    ],
    [
      "src/services/athanorPresetService.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "src/commands/types.ts",
        "electron/modules/llm/main/config.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "src/config/athanorModelPresets.json",
        "src/stores/logStore.ts",
        "src/types/athanorPresets.ts"
      ]
    ],
    [
      "src/services/fileIgnoreService.ts",
      [
        "PROJECT.md",
        "resources/files/default_athignore"
      ]
    ],
    [
      "src/services/fileSystemService.ts",
      [
        "electron/main.ts",
        "src/utils/constants.ts",
        "src/utils/fileTree.ts"
      ]
    ],
    [
      "src/services/promptService.ts",
      [
        "electron/main.ts",
        "src/commands/types.ts",
        "src/services/fileSystemService.ts",
        "src/stores/promptStore.ts",
        "src/stores/taskStore.ts",
        "src/types/promptTypes.ts",
        "src/types/taskTypes.ts",
        "src/utils/constants.ts"
      ]
    ],
    [
      "src/stores/applyChangesStore.ts",
      [
        "src/commands/types.ts",
        "src/commands/parser/index.ts",
        "src/index.css",
        "src/index.tsx",
        "src/stores/logStore.ts"
      ]
    ],
    [
      "src/stores/contextStore.ts",
      [
        "electron/main.ts",
        "electron/services/RelevanceEngineService.ts"
      ]
    ],
    [
      "src/stores/fileSystemStore.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "src/commands/types.ts",
        "electron/modules/llm/main/config.ts",
        "src/utils/constants.ts",
        "src/utils/fileTree.ts"
      ]
    ],
    [
      "src/stores/promptStore.ts",
      [
        "src/commands/types.ts",
        "src/types/promptTypes.ts"
      ]
    ],
    [
      "src/stores/settingsStore.ts",
      [
        "electron/main.ts",
        "src/commands/types.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "electron/services/SettingsService.ts",
        "src/utils/constants.ts"
      ]
    ],
    [
      "src/stores/taskStore.ts",
      [
        "src/commands/types.ts",
        "src/types/taskTypes.ts"
      ]
    ],
    [
      "src/stores/workbenchStore.test.ts",
      [
        "src/commands/parser/index.ts",
        "src/index.css",
        "src/index.tsx",
        "src/stores/workbenchStore.ts",
        "src/utils/fileSelection.ts",
        "src/utils/fileTree.ts"
      ]
    ],
    [
      "src/stores/workbenchStore.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "src/commands/types.ts",
        "electron/modules/llm/main/config.ts",
        "src/commands/parser/index.ts",
        "src/commands/descriptions.ts",
        "src/index.css",
        "src/index.tsx",
        "src/stores/settingsStore.ts",
        "src/utils/constants.ts",
        "src/utils/fileSelection.ts",
        "src/utils/fileTree.ts"
      ]
    ],
    [
      "src/types/athanorPresets.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/main.ts",
        "src/commands/types.ts",
        "electron/modules/llm/main/config.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "src/types/global.d.ts",
      [
        "electron/main.ts",
        "src/commands/types.ts",
        "src/commands/parser/index.ts",
        "src/index.css",
        "src/index.tsx",
        "src/stores/logStore.ts",
        "src/types/promptTypes.ts",
        "src/types/taskTypes.ts",
        "src/utils/fileTree.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "src/types/promptTypes.ts",
      [
        "src/commands/types.ts"
      ]
    ],
    [
      "src/types/taskTypes.ts",
      [
        "src/commands/types.ts"
      ]
    ],
    [
      "src/utils/buildPrompt.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "src/commands/types.ts",
        "electron/modules/llm/main/config.ts",
        "src/components/AthanorApp.tsx",
        "src/stores/fileSystemStore.ts",
        "src/types/promptTypes.ts",
        "src/utils/codebaseDocumentation.ts",
        "src/utils/configUtils.ts",
        "src/utils/constants.ts",
        "src/utils/fileTree.ts",
        "src/utils/promptTemplates.ts"
      ]
    ],
    [
      "src/utils/codebaseDocumentation.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "src/commands/types.ts",
        "electron/modules/llm/main/config.ts",
        "src/commands/parser/index.ts",
        "src/index.css",
        "src/index.tsx",
        "src/utils/constants.ts",
        "src/utils/fileSelection.ts",
        "src/utils/fileTextDetection.ts",
        "src/utils/fileTree.ts"
      ]
    ],
    [
      "src/utils/configUtils.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "src/commands/types.ts",
        "electron/modules/llm/main/config.ts",
        "README.md",
        "electron/modules/secure-api-storage/common/errors.ts",
        "src/utils/fileTree.ts",
        "src/utils/projectInfoUtils.ts"
      ]
    ],
    [
      "src/utils/constants.ts",
      [
        "src/commands/parser/index.ts",
        "src/index.css",
        "src/index.tsx"
      ]
    ],
    [
      "src/utils/contextDetection.ts",
      [
        "src/commands/types.ts",
        "src/commands/descriptions.ts"
      ]
    ],
    [
      "src/utils/fileOperations.ts",
      [
        "src/commands/types.ts",
        "src/commands/parser/index.ts",
        "src/index.css",
        "src/index.tsx"
      ]
    ],
    [
      "src/utils/fileSelection.ts",
      [
        "src/utils/fileTree.ts"
      ]
    ],
    [
      "src/utils/fileTextDetection.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "src/commands/types.ts",
        "electron/modules/llm/main/config.ts",
        "electron/preload.ts",
        "src/utils/constants.ts"
      ]
    ],
    [
      "src/utils/languageMapping.ts",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/modules/llm/main/config.ts",
        "package.json"
      ]
    ],
    [
      "src/utils/projectInfoUtils.ts",
      [
        "src/commands/parser/index.ts",
        "src/index.css",
        "src/index.tsx",
        "src/services/fileSystemService.ts",
        "src/utils/constants.ts"
      ]
    ],
    [
      "src/utils/promptTemplates.ts",
      [
        "electron/main.ts",
        "src/utils/buildPrompt.ts",
        "src/utils/extractTagContent.ts"
      ]
    ],
    [
      "tailwind.config.js",
      [
        "src/commands/parser/index.ts",
        "src/index.css",
        "src/index.tsx"
      ]
    ],
    [
      "tsconfig.json",
      [
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "TUTORIAL.md",
      [
        ".github/ISSUE_TEMPLATE/config.yml",
        "electron/main.ts",
        "src/commands/types.ts",
        "electron/modules/llm/main/config.ts",
        "electron/modules/secure-api-storage/common/errors.ts",
        "PROJECT.md",
        "resources/prompts/example_prompt.xml",
        "resources/prompts/example_task.xml",
        "src/commands/descriptions.ts",
        "src/components/SettingsPanel.tsx"
      ]
    ],
    [
      "webpack.main.config.js",
      [
        "electron/main.ts",
        "src/commands/parser/index.ts",
        "electron/workers/projectAnalysisWorker.ts",
        "src/index.css",
        "src/index.tsx",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "webpack.preload.config.js",
      [
        "electron/preload.ts",
        "tests/__mocks__/electron.ts"
      ]
    ],
    [
      "webpack.renderer.config.js",
      [
        "electron/modules/secure-api-storage/common/errors.ts",
        "src/commands/parser/index.ts",
        "src/index.css",
        "src/index.tsx",
        "tests/__mocks__/electron.ts"
      ]
    ]
  ],
  "hubFiles": [
    "src/utils/constants.ts",
    "src/types/global.d.ts",
    "src/utils/fileTree.ts",
    "src/stores/logStore.ts",
    "src/stores/workbenchStore.ts",
    "src/stores/fileSystemStore.ts",
    "electron/services/FileService.ts",
    "electron/modules/llm/common/types.ts",
    "src/stores/settingsStore.ts",
    "electron/modules/secure-api-storage/common/types.ts",
    "electron/services/PathUtils.ts",
    "src/stores/contextStore.ts",
    "src/types/taskTypes.ts",
    "electron/modules/llm/main/clients/types.ts",
    "src/actions/ManualCopyAction.ts",
    "src/stores/applyChangesStore.ts",
    "electron/modules/secure-api-storage/common/providers/ProviderInterface.ts",
    "src/types/promptTypes.ts",
    "electron/services/SettingsService.ts",
    "src/utils/fileSelection.ts"
  ],
  "sharedCommitGraph": [
    [
      ".ath_materials/project_graph.json",
      [
        {
          "file": "electron/main.ts",
          "count": 6
        },
        {
          "file": "electron/services/ProjectGraphService.ts",
          "count": 4
        },
        {
          "file": "electron/workers/projectAnalysisWorker.ts",
          "count": 2
        },
        {
          "file": "src/utils/constants.ts",
          "count": 2
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "electron/windowManager.ts",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "webpack.main.config.js",
          "count": 2
        },
        {
          "file": "webpack.preload.config.js",
          "count": 1
        },
        {
          "file": "webpack.renderer.config.js",
          "count": 1
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 1
        },
        {
          "file": "electron/services/TaskAnalysisUtils.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/TaskAnalysisUtils.ts",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "project_graph.json",
          "count": 2
        },
        {
          "file": "FEATURE.md",
          "count": 2
        },
        {
          "file": "electron/preload.ts",
          "count": 2
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 2
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 2
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/stores/contextStore.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/main.ts",
      [
        {
          "file": ".ath_materials/project_graph.json",
          "count": 6
        },
        {
          "file": "electron/services/ProjectGraphService.ts",
          "count": 4
        },
        {
          "file": "electron/workers/projectAnalysisWorker.ts",
          "count": 2
        },
        {
          "file": "src/utils/constants.ts",
          "count": 4
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "electron/windowManager.ts",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 2
        },
        {
          "file": "package.json",
          "count": 4
        },
        {
          "file": "webpack.main.config.js",
          "count": 2
        },
        {
          "file": "webpack.preload.config.js",
          "count": 1
        },
        {
          "file": "webpack.renderer.config.js",
          "count": 1
        },
        {
          "file": "FEATURE.md",
          "count": 3
        },
        {
          "file": "electron/preload.ts",
          "count": 5
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 3
        },
        {
          "file": "project_graph.json",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 2
        },
        {
          "file": "src/types/global.d.ts",
          "count": 4
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 3
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 3
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 2
        },
        {
          "file": "electron/handlers/contextHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/services/GitService.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/actions/buildTaskAction.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "src/stores/contextStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/project_settings.json",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 2
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 2
        },
        {
          "file": "electron/ignoreRulesManager.test.ts",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.test.ts",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 2
        },
        {
          "file": "src/stores/settingsStore.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.test.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/fileOperationHandlers.ts",
          "count": 1
        },
        {
          "file": "src/utils/promptTemplates.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/services/ProjectGraphService.ts",
      [
        {
          "file": ".ath_materials/project_graph.json",
          "count": 4
        },
        {
          "file": "electron/main.ts",
          "count": 4
        },
        {
          "file": "electron/workers/projectAnalysisWorker.ts",
          "count": 2
        },
        {
          "file": "src/utils/constants.ts",
          "count": 2
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 1
        },
        {
          "file": "electron/services/DependencyScanner.ts",
          "count": 1
        },
        {
          "file": "project_graph.json",
          "count": 1
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 2
        },
        {
          "file": "webpack.main.config.js",
          "count": 1
        },
        {
          "file": "FEATURE.md",
          "count": 2
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/workers/projectAnalysisWorker.ts",
      [
        {
          "file": ".ath_materials/project_graph.json",
          "count": 2
        },
        {
          "file": "electron/main.ts",
          "count": 2
        },
        {
          "file": "electron/services/ProjectGraphService.ts",
          "count": 2
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 1
        },
        {
          "file": "webpack.main.config.js",
          "count": 1
        }
      ]
    ],
    [
      "src/utils/constants.ts",
      [
        {
          "file": ".ath_materials/project_graph.json",
          "count": 2
        },
        {
          "file": "electron/main.ts",
          "count": 4
        },
        {
          "file": "electron/services/ProjectGraphService.ts",
          "count": 2
        },
        {
          "file": "electron/workers/projectAnalysisWorker.ts",
          "count": 1
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 4
        },
        {
          "file": "FEATURE.md",
          "count": 2
        },
        {
          "file": "src/components/FileViewerPanel.tsx",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 5
        },
        {
          "file": "electron/services/TaskAnalysisUtils.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/TaskAnalysisUtils.ts",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 3
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 2
        },
        {
          "file": "electron/handlers/coreHandlers.test.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 3
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 4
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 3
        },
        {
          "file": ".athignore",
          "count": 2
        },
        {
          "file": "PROJECT.md",
          "count": 2
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 2
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 3
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 1
        },
        {
          "file": "src/components/ProjectSettingsPane.tsx",
          "count": 1
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 2
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 6
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 2
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 2
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 2
        },
        {
          "file": "src/utils/configUtils.ts",
          "count": 1
        },
        {
          "file": "src/utils/projectInfoUtils.ts",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_metaprompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        },
        {
          "file": "src/hooks/useFileDrop.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 2
        },
        {
          "file": "src/index.css",
          "count": 2
        },
        {
          "file": "src/stores/workbenchStore.ts",
          "count": 1
        },
        {
          "file": "src/components/PromptContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/stores/promptStore.ts",
          "count": 1
        },
        {
          "file": "src/types/promptTypes.ts",
          "count": 1
        },
        {
          "file": "tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "electron/filePathManager.ts",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 2
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 2
        },
        {
          "file": ".ath_resources/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_resources/README.md",
          "count": 1
        },
        {
          "file": ".ath_resources/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_resources/temp.txt",
          "count": 1
        },
        {
          "file": "src/components/FileExplorer.tsx",
          "count": 1
        }
      ]
    ],
    [
      ".athignore",
      [
        {
          "file": ".ath_materials/project_graph.json",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/windowManager.ts",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 2
        },
        {
          "file": "package.json",
          "count": 6
        },
        {
          "file": "webpack.main.config.js",
          "count": 1
        },
        {
          "file": "webpack.preload.config.js",
          "count": 1
        },
        {
          "file": "webpack.renderer.config.js",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 3
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 2
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 2
        },
        {
          "file": "resources/files/default_athignore",
          "count": 3
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 2
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 3
        },
        {
          "file": "src/components/ProjectSettingsPane.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 2
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 2
        },
        {
          "file": "src/types/global.d.ts",
          "count": 3
        },
        {
          "file": "src/utils/constants.ts",
          "count": 2
        },
        {
          "file": ".github/ISSUE_TEMPLATE/bug_report.md",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/config.yml",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/feature_request.md",
          "count": 1
        },
        {
          "file": ".gitignore",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 2
        },
        {
          "file": "README.md",
          "count": 2
        },
        {
          "file": "resources/images/athanor_logo.png",
          "count": 1
        },
        {
          "file": ".ath_materials/prompts/prompt_test.xml",
          "count": 1
        },
        {
          "file": ".github/workflows/pr-checks.yml",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "scripts/check-dco.sh",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.test.ts",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/hooks/.athignore",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_metaprompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 2
        },
        {
          "file": "electron/preload.ts",
          "count": 2
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        },
        {
          "file": "src/components/FileContextMenu.tsx",
          "count": 2
        },
        {
          "file": "src/components/fileExplorer/hooks/useFileExplorer.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/windowManager.ts",
      [
        {
          "file": ".ath_materials/project_graph.json",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 2
        },
        {
          "file": "package.json",
          "count": 2
        },
        {
          "file": "webpack.main.config.js",
          "count": 1
        },
        {
          "file": "webpack.preload.config.js",
          "count": 2
        },
        {
          "file": "webpack.renderer.config.js",
          "count": 2
        },
        {
          "file": "package-lock.json",
          "count": 1
        }
      ]
    ],
    [
      "forge.config.js",
      [
        {
          "file": ".ath_materials/project_graph.json",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 2
        },
        {
          "file": "electron/main.ts",
          "count": 2
        },
        {
          "file": "electron/windowManager.ts",
          "count": 2
        },
        {
          "file": "package.json",
          "count": 5
        },
        {
          "file": "webpack.main.config.js",
          "count": 1
        },
        {
          "file": "webpack.preload.config.js",
          "count": 2
        },
        {
          "file": "webpack.renderer.config.js",
          "count": 2
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/project_settings.json",
          "count": 1
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "public/index.html",
          "count": 1
        },
        {
          "file": "resources/images/athanor.ico",
          "count": 1
        },
        {
          "file": "resources/images/athanor.png",
          "count": 1
        },
        {
          "file": "resources/images/athanor_logo.png",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 2
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "temp.txt",
          "count": 1
        },
        {
          "file": "electron/handlers/fileOperationHandlers.ts",
          "count": 1
        },
        {
          "file": "src/utils/promptTemplates.ts",
          "count": 1
        },
        {
          "file": "package-lock.json",
          "count": 1
        }
      ]
    ],
    [
      "package.json",
      [
        {
          "file": ".ath_materials/project_graph.json",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 6
        },
        {
          "file": "electron/main.ts",
          "count": 4
        },
        {
          "file": "electron/windowManager.ts",
          "count": 2
        },
        {
          "file": "forge.config.js",
          "count": 5
        },
        {
          "file": "webpack.main.config.js",
          "count": 1
        },
        {
          "file": "webpack.preload.config.js",
          "count": 2
        },
        {
          "file": "webpack.renderer.config.js",
          "count": 2
        },
        {
          "file": "CHANGELOG.md",
          "count": 12
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 4
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 7
        },
        {
          "file": ".ath_materials/project_settings.json",
          "count": 2
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 5
        },
        {
          "file": "electron/ignoreRulesManager.test.ts",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 2
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 2
        },
        {
          "file": "src/stores/settingsStore.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.test.ts",
          "count": 3
        },
        {
          "file": "electron/preload.ts",
          "count": 5
        },
        {
          "file": "src/types/global.d.ts",
          "count": 8
        },
        {
          "file": "src/utils/constants.ts",
          "count": 4
        },
        {
          "file": "PROJECT.md",
          "count": 3
        },
        {
          "file": "TUTORIAL.md",
          "count": 5
        },
        {
          "file": "resources/files/default_athignore",
          "count": 3
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 3
        },
        {
          "file": "src/components/ProjectSettingsPane.tsx",
          "count": 1
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 2
        },
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".github/workflows/auto-tag.yml",
          "count": 1
        },
        {
          "file": ".github/workflows/pr-checks.yml",
          "count": 2
        },
        {
          "file": "README.md",
          "count": 7
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 5
        },
        {
          "file": "package-lock.json",
          "count": 5
        },
        {
          "file": ".github/FUNDING.yml",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/bug_report.md",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/config.yml",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/feature_request.md",
          "count": 1
        },
        {
          "file": ".gitignore",
          "count": 1
        },
        {
          "file": "resources/images/athanor_logo.png",
          "count": 2
        },
        {
          "file": "src/components/FileViewerPanel.tsx",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 2
        },
        {
          "file": "src/utils/fileTextDetection.ts",
          "count": 1
        },
        {
          "file": "src/utils/languageMapping.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/prompts/prompt_test.xml",
          "count": 1
        },
        {
          "file": "scripts/check-dco.sh",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.test.ts",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/hooks/.athignore",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_prompt_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_task_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/example_prompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/example_task.xml",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 3
        },
        {
          "file": "src/components/action-panel/CustomPromptsHelpModal.tsx",
          "count": 1
        },
        {
          "file": "resources/prompts/task_pr_changelog.xml",
          "count": 1
        },
        {
          "file": "src/components/FileContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/components/action-panel/VariantsContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/stores/workbenchStore.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": "public/index.html",
          "count": 1
        },
        {
          "file": "resources/images/athanor.ico",
          "count": 1
        },
        {
          "file": "resources/images/athanor.png",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 4
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 4
        },
        {
          "file": "src/commands/parser/commandParser.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 3
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 3
        },
        {
          "file": "src/utils/configUtils.ts",
          "count": 2
        },
        {
          "file": "src/utils/projectInfoUtils.ts",
          "count": 2
        },
        {
          "file": "src/utils/promptTemplates.ts",
          "count": 2
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 2
        },
        {
          "file": "src/components/AthanorTabs.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": "src/hooks/useLogPanelResize.ts",
          "count": 1
        },
        {
          "file": "src/stores/applyChangesStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 2
        },
        {
          "file": "athanor.yml",
          "count": 2
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_metaprompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 2
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        },
        {
          "file": "electron/handlers/fileOperationHandlers.ts",
          "count": 1
        }
      ]
    ],
    [
      "webpack.main.config.js",
      [
        {
          "file": ".ath_materials/project_graph.json",
          "count": 2
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 2
        },
        {
          "file": "electron/windowManager.ts",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "webpack.preload.config.js",
          "count": 1
        },
        {
          "file": "webpack.renderer.config.js",
          "count": 1
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/services/ProjectGraphService.ts",
          "count": 1
        },
        {
          "file": "electron/workers/projectAnalysisWorker.ts",
          "count": 1
        }
      ]
    ],
    [
      "webpack.preload.config.js",
      [
        {
          "file": ".ath_materials/project_graph.json",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/windowManager.ts",
          "count": 2
        },
        {
          "file": "forge.config.js",
          "count": 2
        },
        {
          "file": "package.json",
          "count": 2
        },
        {
          "file": "webpack.main.config.js",
          "count": 1
        },
        {
          "file": "webpack.renderer.config.js",
          "count": 2
        },
        {
          "file": "package-lock.json",
          "count": 1
        }
      ]
    ],
    [
      "webpack.renderer.config.js",
      [
        {
          "file": ".ath_materials/project_graph.json",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/windowManager.ts",
          "count": 2
        },
        {
          "file": "forge.config.js",
          "count": 2
        },
        {
          "file": "package.json",
          "count": 2
        },
        {
          "file": "webpack.main.config.js",
          "count": 1
        },
        {
          "file": "webpack.preload.config.js",
          "count": 2
        },
        {
          "file": "package-lock.json",
          "count": 1
        }
      ]
    ],
    [
      "src/components/AthanorApp.tsx",
      [
        {
          "file": "src/stores/contextStore.ts",
          "count": 3
        },
        {
          "file": ".ath_materials/project_graph.json",
          "count": 2
        },
        {
          "file": "electron/main.ts",
          "count": 2
        },
        {
          "file": "electron/preload.ts",
          "count": 5
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 1
        },
        {
          "file": "project_graph.json",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 8
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 2
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 5
        },
        {
          "file": "electron/handlers/contextHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/services/GitService.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 2
        },
        {
          "file": "src/actions/buildTaskAction.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 2
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 2
        },
        {
          "file": "package.json",
          "count": 4
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 6
        },
        {
          "file": ".athignore",
          "count": 2
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 2
        },
        {
          "file": "resources/files/default_athignore",
          "count": 2
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 2
        },
        {
          "file": "src/components/ProjectSettingsPane.tsx",
          "count": 1
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 2
        },
        {
          "file": "src/utils/constants.ts",
          "count": 3
        },
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 2
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 2
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 2
        },
        {
          "file": "src/components/AthanorTabs.tsx",
          "count": 2
        },
        {
          "file": "src/hooks/useLogPanelResize.ts",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "src/stores/applyChangesStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 2
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 3
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 4
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 2
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 3
        },
        {
          "file": "temp.txt",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 1
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/stores/logStore.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "electron/filePathManager.ts",
          "count": 1
        },
        {
          "file": "src/hooks/usePanelResize.ts",
          "count": 1
        },
        {
          "file": ".ath_resources/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_resources/README.md",
          "count": 1
        },
        {
          "file": ".ath_resources/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_resources/temp.txt",
          "count": 1
        },
        {
          "file": "src/components/FileExplorer.tsx",
          "count": 1
        }
      ]
    ],
    [
      "src/stores/contextStore.ts",
      [
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 3
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 5
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 5
        },
        {
          "file": "src/components/action-panel/SelectedFilesDisplay.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 4
        },
        {
          "file": "src/types/global.d.ts",
          "count": 6
        },
        {
          "file": ".ath_materials/project_graph.json",
          "count": 1
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 2
        },
        {
          "file": "electron/preload.ts",
          "count": 3
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "FEATURE.md",
          "count": 2
        },
        {
          "file": "electron/services/FileService.test.ts",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "electron/handlers/contextHandlers.ts",
          "count": 3
        },
        {
          "file": "src/actions/buildTaskAction.ts",
          "count": 2
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/services/GitService.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/components/ActionPanel.tsx",
      [
        {
          "file": "src/stores/contextStore.ts",
          "count": 5
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 4
        },
        {
          "file": "src/components/action-panel/SelectedFilesDisplay.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 4
        },
        {
          "file": "src/types/global.d.ts",
          "count": 9
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 2
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 3
        },
        {
          "file": "FEATURE.md",
          "count": 1
        },
        {
          "file": "electron/handlers/contextHandlers.ts",
          "count": 3
        },
        {
          "file": "src/actions/buildTaskAction.ts",
          "count": 2
        },
        {
          "file": "electron/preload.ts",
          "count": 3
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 1
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/services/GitService.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 2
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 6
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 3
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.test.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 3
        },
        {
          "file": "resources/prompts/custom_prompt_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_task_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/example_prompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/example_task.xml",
          "count": 1
        },
        {
          "file": "src/components/action-panel/CustomPromptsHelpModal.tsx",
          "count": 1
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 5
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 2
        },
        {
          "file": "src/utils/configUtils.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 6
        },
        {
          "file": "src/utils/projectInfoUtils.ts",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 4
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 3
        },
        {
          "file": "resources/prompts/prompt_metaprompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 2
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        },
        {
          "file": "src/hooks/useFileDrop.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 2
        },
        {
          "file": "src/index.css",
          "count": 6
        },
        {
          "file": "src/utils/contextDetection.ts",
          "count": 2
        },
        {
          "file": "src/utils/promptTemplates.ts",
          "count": 2
        },
        {
          "file": "src/stores/workbenchStore.ts",
          "count": 2
        },
        {
          "file": "tailwind.config.js",
          "count": 1
        },
        {
          "file": "src/actions/AutoSelectAction.ts",
          "count": 1
        },
        {
          "file": "src/actions/BuildSoftwareEngineerPromptAction.ts",
          "count": 1
        },
        {
          "file": "src/actions/BuildTaskAction.ts",
          "count": 1
        },
        {
          "file": "src/actions/index.ts",
          "count": 2
        },
        {
          "file": "src/stores/promptStore.ts",
          "count": 1
        },
        {
          "file": "src/types/promptTypes.d.ts",
          "count": 1
        },
        {
          "file": "src/actions/descriptions.ts",
          "count": 1
        },
        {
          "file": "src/actions/types.ts",
          "count": 1
        },
        {
          "file": "src/commands/descriptions.ts",
          "count": 2
        },
        {
          "file": "src/commands/index.ts",
          "count": 2
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/commandParser.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/index.ts",
          "count": 1
        },
        {
          "file": "src/commands/types.ts",
          "count": 1
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/stores/commandStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/actionDescriptions.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/services/TaskAnalysisUtils.test.ts",
      [
        {
          "file": "electron/services/TaskAnalysisUtils.ts",
          "count": 7
        },
        {
          "file": ".ath_materials/project_graph.json",
          "count": 1
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 4
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "electron/services/stopwords.ts",
          "count": 2
        },
        {
          "file": "electron/services/wordFilters.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/services/TaskAnalysisUtils.ts",
      [
        {
          "file": "electron/services/TaskAnalysisUtils.test.ts",
          "count": 7
        },
        {
          "file": ".ath_materials/project_graph.json",
          "count": 1
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 4
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "electron/services/stopwords.ts",
          "count": 2
        },
        {
          "file": "electron/services/wordFilters.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/services/RelevanceEngineService.ts",
      [
        {
          "file": ".ath_materials/project_graph.json",
          "count": 1
        },
        {
          "file": "electron/services/TaskAnalysisUtils.test.ts",
          "count": 4
        },
        {
          "file": "electron/services/TaskAnalysisUtils.ts",
          "count": 4
        },
        {
          "file": "src/utils/constants.ts",
          "count": 4
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 4
        },
        {
          "file": "src/components/action-panel/SelectedFilesDisplay.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 4
        },
        {
          "file": "src/stores/contextStore.ts",
          "count": 5
        },
        {
          "file": "src/types/global.d.ts",
          "count": 5
        },
        {
          "file": "electron/services/ProjectGraphService.ts",
          "count": 1
        },
        {
          "file": "FEATURE.md",
          "count": 2
        },
        {
          "file": "electron/services/FileService.test.ts",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 3
        },
        {
          "file": "electron/handlers/contextHandlers.ts",
          "count": 3
        },
        {
          "file": "src/actions/buildTaskAction.ts",
          "count": 2
        },
        {
          "file": "electron/services/PromptUtils.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 2
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 1
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/services/GitService.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/components/action-panel/SelectedFilesDisplay.tsx",
      [
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "src/stores/contextStore.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/components/fileExplorer/FileExplorerItem.tsx",
      [
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 4
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 4
        },
        {
          "file": "src/components/action-panel/SelectedFilesDisplay.tsx",
          "count": 1
        },
        {
          "file": "src/stores/contextStore.ts",
          "count": 4
        },
        {
          "file": "src/types/global.d.ts",
          "count": 5
        },
        {
          "file": "src/hooks/useDarkMode.ts",
          "count": 2
        },
        {
          "file": "src/index.css",
          "count": 2
        },
        {
          "file": "FEATURE.md",
          "count": 2
        },
        {
          "file": "electron/services/FileService.test.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 3
        },
        {
          "file": "electron/handlers/contextHandlers.ts",
          "count": 2
        },
        {
          "file": "src/actions/buildTaskAction.ts",
          "count": 2
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "electron/services/GitService.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 2
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        },
        {
          "file": "src/hooks/useFileDrop.ts",
          "count": 2
        },
        {
          "file": "temp.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "electron/filePathManager.ts",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorer.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/hooks/useFileExplorer.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/types/global.d.ts",
      [
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 5
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 9
        },
        {
          "file": "src/components/action-panel/SelectedFilesDisplay.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 5
        },
        {
          "file": "src/stores/contextStore.ts",
          "count": 6
        },
        {
          "file": ".ath_materials/project_graph.json",
          "count": 2
        },
        {
          "file": "electron/main.ts",
          "count": 4
        },
        {
          "file": "electron/preload.ts",
          "count": 16
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 2
        },
        {
          "file": "project_graph.json",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 8
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 2
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 5
        },
        {
          "file": "src/components/FileViewerPanel.tsx",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 5
        },
        {
          "file": "FEATURE.md",
          "count": 2
        },
        {
          "file": "electron/services/FileService.test.ts",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 4
        },
        {
          "file": "electron/handlers/contextHandlers.ts",
          "count": 3
        },
        {
          "file": "src/actions/buildTaskAction.ts",
          "count": 2
        },
        {
          "file": "electron/services/GitService.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 2
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 3
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 4
        },
        {
          "file": "CHANGELOG.md",
          "count": 4
        },
        {
          "file": "electron/handlers/coreHandlers.test.ts",
          "count": 3
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 9
        },
        {
          "file": "package.json",
          "count": 8
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 8
        },
        {
          "file": ".athignore",
          "count": 3
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 2
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 2
        },
        {
          "file": "resources/files/default_athignore",
          "count": 2
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 2
        },
        {
          "file": "src/components/ProjectSettingsPane.tsx",
          "count": 1
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 2
        },
        {
          "file": "resources/prompts/custom_prompt_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_task_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/example_prompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/example_task.xml",
          "count": 1
        },
        {
          "file": "src/components/action-panel/CustomPromptsHelpModal.tsx",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 2
        },
        {
          "file": "src/commands/parser/commandParser.ts",
          "count": 1
        },
        {
          "file": "src/utils/configUtils.ts",
          "count": 1
        },
        {
          "file": "src/utils/projectInfoUtils.ts",
          "count": 1
        },
        {
          "file": "src/utils/promptTemplates.ts",
          "count": 2
        },
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorTabs.tsx",
          "count": 2
        },
        {
          "file": "src/hooks/useLogPanelResize.ts",
          "count": 1
        },
        {
          "file": "src/stores/applyChangesStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 4
        },
        {
          "file": "temp.txt",
          "count": 2
        },
        {
          "file": "src/components/FileContextMenu.tsx",
          "count": 2
        },
        {
          "file": "src/hooks/useFileDrop.ts",
          "count": 1
        },
        {
          "file": "src/stores/workbenchStore.ts",
          "count": 2
        },
        {
          "file": "electron/handlers/fileOperationHandlers.ts",
          "count": 3
        },
        {
          "file": "src/services/promptService.ts",
          "count": 2
        },
        {
          "file": "src/stores/promptStore.ts",
          "count": 1
        },
        {
          "file": "src/types/promptTypes.d.ts",
          "count": 1
        },
        {
          "file": "src/commands/selectCommand.ts",
          "count": 1
        },
        {
          "file": "src/actions/descriptions.ts",
          "count": 1
        },
        {
          "file": "src/actions/index.ts",
          "count": 1
        },
        {
          "file": "src/actions/types.ts",
          "count": 1
        },
        {
          "file": "src/commands/descriptions.ts",
          "count": 1
        },
        {
          "file": "src/commands/index.ts",
          "count": 1
        },
        {
          "file": "src/hooks/usePanelResize.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileTextDetection.ts",
          "count": 2
        },
        {
          "file": "src/services/xmlParsingService.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/hooks/useFileSystemLifecycle.ts",
      [
        {
          "file": ".ath_materials/project_graph.json",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.test.ts",
          "count": 2
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 4
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 2
        },
        {
          "file": "src/stores/settingsStore.ts",
          "count": 2
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 2
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 2
        },
        {
          "file": "CHANGELOG.md",
          "count": 5
        },
        {
          "file": "package.json",
          "count": 7
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 6
        },
        {
          "file": ".ath_materials/project_settings.json",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 7
        },
        {
          "file": "electron/main.ts",
          "count": 2
        },
        {
          "file": "electron/services/PathUtils.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.test.ts",
          "count": 2
        },
        {
          "file": "electron/preload.ts",
          "count": 5
        },
        {
          "file": "src/types/global.d.ts",
          "count": 8
        },
        {
          "file": "src/utils/constants.ts",
          "count": 3
        },
        {
          "file": ".athignore",
          "count": 2
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "resources/files/default_athignore",
          "count": 2
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 2
        },
        {
          "file": "src/components/ProjectSettingsPane.tsx",
          "count": 1
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 2
        },
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorTabs.tsx",
          "count": 2
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 3
        },
        {
          "file": "src/hooks/useLogPanelResize.ts",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "src/stores/applyChangesStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 2
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 3
        },
        {
          "file": "temp.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "electron/filePathManager.ts",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "src/stores/promptStore.ts",
          "count": 1
        },
        {
          "file": "src/types/promptTypes.d.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 2
        },
        {
          "file": "src/commands/selectCommand.ts",
          "count": 1
        },
        {
          "file": "src/hooks/usePanelResize.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/services/DependencyScanner.ts",
      [
        {
          "file": "electron/services/ProjectGraphService.ts",
          "count": 1
        },
        {
          "file": "common/types/git-service.ts",
          "count": 1
        },
        {
          "file": "electron/services/DependencyScanner.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/GitService.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/GitService.ts",
          "count": 1
        }
      ]
    ],
    [
      "project_graph.json",
      [
        {
          "file": ".ath_materials/project_graph.json",
          "count": 2
        },
        {
          "file": "electron/services/ProjectGraphService.ts",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        }
      ]
    ],
    [
      "FEATURE.md",
      [
        {
          "file": ".ath_materials/project_graph.json",
          "count": 2
        },
        {
          "file": "electron/main.ts",
          "count": 3
        },
        {
          "file": "src/utils/constants.ts",
          "count": 2
        },
        {
          "file": "electron/services/ProjectGraphService.ts",
          "count": 2
        },
        {
          "file": "electron/services/FileService.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 2
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 2
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "src/stores/contextStore.ts",
          "count": 2
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/contextHandlers.ts",
          "count": 1
        },
        {
          "file": "src/actions/buildTaskAction.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "PROJECT.md",
          "count": 2
        }
      ]
    ],
    [
      "electron/preload.ts",
      [
        {
          "file": ".ath_materials/project_graph.json",
          "count": 2
        },
        {
          "file": "electron/main.ts",
          "count": 5
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 3
        },
        {
          "file": "project_graph.json",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 5
        },
        {
          "file": "src/types/global.d.ts",
          "count": 16
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 3
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/stores/contextStore.ts",
          "count": 3
        },
        {
          "file": "FEATURE.md",
          "count": 1
        },
        {
          "file": "electron/services/ProjectGraphService.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/contextHandlers.ts",
          "count": 2
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 2
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 3
        },
        {
          "file": "electron/services/GitService.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/actions/buildTaskAction.ts",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 2
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 3
        },
        {
          "file": "electron/handlers/coreHandlers.test.ts",
          "count": 3
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 9
        },
        {
          "file": "package.json",
          "count": 5
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 5
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_prompt_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_task_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/example_prompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/example_task.xml",
          "count": 1
        },
        {
          "file": "src/components/action-panel/CustomPromptsHelpModal.tsx",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 2
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 2
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 1
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 4
        },
        {
          "file": "temp.txt",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 1
        },
        {
          "file": "src/components/FileContextMenu.tsx",
          "count": 2
        },
        {
          "file": "electron/handlers/fileOperationHandlers.ts",
          "count": 3
        },
        {
          "file": "src/services/promptService.ts",
          "count": 1
        },
        {
          "file": "src/commands/selectCommand.ts",
          "count": 1
        },
        {
          "file": "src/services/xmlParsingService.ts",
          "count": 1
        },
        {
          "file": "src/utils/promptTemplates.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/services/FileService.ts",
      [
        {
          "file": ".ath_materials/project_graph.json",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 3
        },
        {
          "file": "electron/preload.ts",
          "count": 3
        },
        {
          "file": "project_graph.json",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "electron/ignoreRulesManager.test.ts",
          "count": 2
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 2
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 2
        },
        {
          "file": "src/stores/settingsStore.ts",
          "count": 2
        },
        {
          "file": "FEATURE.md",
          "count": 1
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/services/ProjectGraphService.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/contextHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/stores/contextStore.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/project_settings.json",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        }
      ]
    ],
    [
      "electron/ipcHandlers.ts",
      [
        {
          "file": ".ath_materials/project_graph.json",
          "count": 2
        },
        {
          "file": "electron/main.ts",
          "count": 3
        },
        {
          "file": "electron/services/ProjectGraphService.ts",
          "count": 2
        },
        {
          "file": "electron/workers/projectAnalysisWorker.ts",
          "count": 1
        },
        {
          "file": "webpack.main.config.js",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 3
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 2
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/stores/contextStore.ts",
          "count": 2
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "FEATURE.md",
          "count": 1
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/contextHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/services/GitService.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/actions/buildTaskAction.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/components/MainLayout.tsx",
      [
        {
          "file": ".ath_materials/project_graph.json",
          "count": 1
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 5
        },
        {
          "file": "src/stores/contextStore.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 5
        },
        {
          "file": "src/components/ApplyChangesPanel.tsx",
          "count": 2
        },
        {
          "file": ".ath_materials/LICENSE",
          "count": 2
        },
        {
          "file": ".ath_materials/README.md",
          "count": 2
        },
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/api_cline_compatible.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/anthropic.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/base-llm-client.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/gemini.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/llm-clients-factory.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openai.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openrouter.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/response.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/llm-interface.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/memory-manager.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/prompt-utils.js",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 2
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 2
        },
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 3
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 2
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 2
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 2
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 3
        },
        {
          "file": "src/components/AthanorTabs.tsx",
          "count": 2
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 3
        },
        {
          "file": "src/hooks/useLogPanelResize.ts",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 2
        },
        {
          "file": "src/stores/applyChangesStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 2
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_metaprompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 2
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 4
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 2
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 2
        },
        {
          "file": "src/utils/constants.ts",
          "count": 2
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/stores/logStore.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        },
        {
          "file": "src/stores/workbenchStore.ts",
          "count": 1
        },
        {
          "file": "electron/filePathManager.ts",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 2
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorer.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/hooks/useFileExplorer.ts",
          "count": 1
        },
        {
          "file": "src/hooks/usePanelResize.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/utils/buildPrompt.ts",
      [
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 5
        },
        {
          "file": "electron/handlers/contextHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 2
        },
        {
          "file": "electron/services/GitService.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 2
        },
        {
          "file": "src/actions/buildTaskAction.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 6
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "src/stores/contextStore.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 3
        },
        {
          "file": "package.json",
          "count": 3
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 5
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 3
        },
        {
          "file": "src/commands/parser/commandParser.ts",
          "count": 1
        },
        {
          "file": "src/utils/configUtils.ts",
          "count": 2
        },
        {
          "file": "src/utils/projectInfoUtils.ts",
          "count": 2
        },
        {
          "file": "src/utils/promptTemplates.ts",
          "count": 3
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 2
        },
        {
          "file": "src/utils/constants.ts",
          "count": 2
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 3
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 3
        },
        {
          "file": "resources/prompts/prompt_metaprompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 2
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        },
        {
          "file": "src/utils/contextDetection.ts",
          "count": 2
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 2
        },
        {
          "file": "src/stores/promptStore.ts",
          "count": 1
        },
        {
          "file": "src/types/promptTypes.d.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "src/commands/selectCommand.ts",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/utils/codebaseDocumentation.ts",
      [
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 5
        },
        {
          "file": "electron/handlers/contextHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "electron/services/GitService.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 3
        },
        {
          "file": "src/actions/buildTaskAction.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 3
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "src/stores/contextStore.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 4
        },
        {
          "file": "package.json",
          "count": 3
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 3
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 3
        },
        {
          "file": "src/commands/parser/commandParser.ts",
          "count": 1
        },
        {
          "file": "src/utils/configUtils.ts",
          "count": 2
        },
        {
          "file": "src/utils/projectInfoUtils.ts",
          "count": 2
        },
        {
          "file": "src/utils/promptTemplates.ts",
          "count": 1
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 2
        },
        {
          "file": "src/utils/constants.ts",
          "count": 2
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_metaprompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileTextDetection.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/components/ApplyChangesPanel.tsx",
      [
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/api_cline_compatible.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/anthropic.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/base-llm-client.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/gemini.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/llm-clients-factory.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openai.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openrouter.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/response.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/llm-interface.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/memory-manager.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/prompt-utils.js",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        }
      ]
    ],
    [
      "src/components/FileViewerPanel.tsx",
      [
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "src/utils/fileTextDetection.ts",
          "count": 1
        },
        {
          "file": "src/utils/languageMapping.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/hooks/useDarkMode.ts",
      [
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 2
        }
      ]
    ],
    [
      "src/index.css",
      [
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 2
        },
        {
          "file": "FEATURE.md",
          "count": 1
        },
        {
          "file": "electron/services/FileService.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 1
        },
        {
          "file": "src/stores/contextStore.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 4
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "package-lock.json",
          "count": 2
        },
        {
          "file": "package.json",
          "count": 2
        },
        {
          "file": "src/components/FileViewerPanel.tsx",
          "count": 1
        },
        {
          "file": "src/utils/fileTextDetection.ts",
          "count": 1
        },
        {
          "file": "src/utils/languageMapping.ts",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/AthanorTabs.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/hooks/useLogPanelResize.ts",
          "count": 1
        },
        {
          "file": "src/stores/applyChangesStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 6
        },
        {
          "file": "src/stores/workbenchStore.ts",
          "count": 2
        },
        {
          "file": "src/utils/constants.ts",
          "count": 2
        },
        {
          "file": "tailwind.config.js",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        }
      ]
    ],
    [
      "electron/ignoreRulesManager.test.ts",
      [
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 2
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 2
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 2
        },
        {
          "file": "src/stores/settingsStore.ts",
          "count": 2
        },
        {
          "file": ".ath_materials/project_settings.json",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        }
      ]
    ],
    [
      "electron/ignoreRulesManager.ts",
      [
        {
          "file": "electron/ignoreRulesManager.test.ts",
          "count": 2
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 2
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 4
        },
        {
          "file": "src/stores/settingsStore.ts",
          "count": 2
        },
        {
          "file": ".ath_materials/project_settings.json",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 2
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 5
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 2
        },
        {
          "file": ".athignore",
          "count": 2
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 2
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 1
        },
        {
          "file": "src/components/ProjectSettingsPane.tsx",
          "count": 1
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "src/utils/constants.ts",
          "count": 2
        },
        {
          "file": "src/components/FileContextMenu.tsx",
          "count": 2
        },
        {
          "file": "src/components/fileExplorer/hooks/useFileExplorer.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 2
        },
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "electron/filePathManager.ts",
          "count": 2
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 4
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "electron/handlers/fileOperationHandlers.ts",
          "count": 2
        },
        {
          "file": "electron/handlers/fileWatchHandlers.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/stores/settingsStore.ts",
      [
        {
          "file": "electron/ignoreRulesManager.test.ts",
          "count": 2
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 2
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 2
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 2
        },
        {
          "file": ".ath_materials/project_settings.json",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        }
      ]
    ],
    [
      "electron/services/stopwords.ts",
      [
        {
          "file": "electron/services/TaskAnalysisUtils.test.ts",
          "count": 2
        },
        {
          "file": "electron/services/TaskAnalysisUtils.ts",
          "count": 2
        },
        {
          "file": "electron/services/wordFilters.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/services/wordFilters.ts",
      [
        {
          "file": "electron/services/TaskAnalysisUtils.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/TaskAnalysisUtils.ts",
          "count": 1
        },
        {
          "file": "electron/services/stopwords.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/services/FileService.test.ts",
      [
        {
          "file": "FEATURE.md",
          "count": 1
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "src/stores/contextStore.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/stores/fileSystemStore.ts",
      [
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 3
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 2
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 2
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 2
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 2
        },
        {
          "file": "src/utils/configUtils.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 2
        },
        {
          "file": "src/utils/projectInfoUtils.ts",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_metaprompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/handlers/contextHandlers.ts",
      [
        {
          "file": "FEATURE.md",
          "count": 1
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 3
        },
        {
          "file": "src/actions/buildTaskAction.ts",
          "count": 2
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 3
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 2
        },
        {
          "file": "src/stores/contextStore.ts",
          "count": 3
        },
        {
          "file": "src/types/global.d.ts",
          "count": 3
        },
        {
          "file": "electron/preload.ts",
          "count": 2
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 1
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/services/GitService.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/actions/buildTaskAction.ts",
      [
        {
          "file": "FEATURE.md",
          "count": 1
        },
        {
          "file": "electron/handlers/contextHandlers.ts",
          "count": 2
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 2
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 2
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 2
        },
        {
          "file": "src/stores/contextStore.ts",
          "count": 2
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "electron/services/GitService.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/services/PromptUtils.ts",
      [
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/services/PathUtils.ts",
      [
        {
          "file": "electron/main.ts",
          "count": 2
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/project_settings.json",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 2
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.test.ts",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 1
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.test.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 2
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/stores/settingsStore.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/prompts/prompt_test.xml",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": ".github/workflows/pr-checks.yml",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "scripts/check-dco.sh",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.test.ts",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/hooks/.athignore",
          "count": 1
        }
      ]
    ],
    [
      "src/actions/ManualCopyAction.test.ts",
      [
        {
          "file": "src/actions/buildTaskAction.test.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/prompts/prompt_test.xml",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": ".github/workflows/pr-checks.yml",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "scripts/check-dco.sh",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.test.ts",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/hooks/.athignore",
          "count": 1
        }
      ]
    ],
    [
      "src/actions/buildTaskAction.test.ts",
      [
        {
          "file": "src/actions/ManualCopyAction.test.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/services/GitService.test.ts",
      [
        {
          "file": "electron/handlers/contextHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/actions/buildTaskAction.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "src/stores/contextStore.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        },
        {
          "file": "common/types/git-service.ts",
          "count": 1
        },
        {
          "file": "electron/services/DependencyScanner.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/DependencyScanner.ts",
          "count": 1
        },
        {
          "file": "electron/services/GitService.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/actions/ManualCopyAction.ts",
      [
        {
          "file": "electron/handlers/contextHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/ipcHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "electron/services/GitService.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/RelevanceEngineService.ts",
          "count": 1
        },
        {
          "file": "src/actions/buildTaskAction.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 2
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 2
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "src/stores/contextStore.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 2
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 3
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_metaprompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 2
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 4
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/stores/logStore.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        }
      ]
    ],
    [
      "common/types/git-service.ts",
      [
        {
          "file": "electron/services/DependencyScanner.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/DependencyScanner.ts",
          "count": 1
        },
        {
          "file": "electron/services/GitService.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/GitService.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/services/DependencyScanner.test.ts",
      [
        {
          "file": "common/types/git-service.ts",
          "count": 1
        },
        {
          "file": "electron/services/DependencyScanner.ts",
          "count": 1
        },
        {
          "file": "electron/services/GitService.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/GitService.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/services/GitService.ts",
      [
        {
          "file": "common/types/git-service.ts",
          "count": 1
        },
        {
          "file": "electron/services/DependencyScanner.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/DependencyScanner.ts",
          "count": 1
        },
        {
          "file": "electron/services/GitService.test.ts",
          "count": 1
        }
      ]
    ],
    [
      "PROJECT.md",
      [
        {
          "file": "FEATURE.md",
          "count": 2
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 3
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 1
        },
        {
          "file": "src/components/ProjectSettingsPane.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 2
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/project_settings.json",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "public/index.html",
          "count": 1
        },
        {
          "file": "resources/images/athanor.ico",
          "count": 1
        },
        {
          "file": "resources/images/athanor.png",
          "count": 1
        },
        {
          "file": "resources/images/athanor_logo.png",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        },
        {
          "file": "src/utils/configUtils.ts",
          "count": 1
        },
        {
          "file": "src/utils/projectInfoUtils.ts",
          "count": 1
        }
      ]
    ],
    [
      "CHANGELOG.md",
      [
        {
          "file": "package.json",
          "count": 12
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 2
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 5
        },
        {
          "file": ".ath_materials/project_settings.json",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 4
        },
        {
          "file": "electron/ignoreRulesManager.test.ts",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 2
        },
        {
          "file": "electron/main.ts",
          "count": 2
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 2
        },
        {
          "file": "src/stores/settingsStore.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.test.ts",
          "count": 3
        },
        {
          "file": "electron/preload.ts",
          "count": 3
        },
        {
          "file": "src/types/global.d.ts",
          "count": 4
        },
        {
          "file": "src/utils/constants.ts",
          "count": 2
        },
        {
          "file": ".athignore",
          "count": 3
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 5
        },
        {
          "file": "resources/files/default_athignore",
          "count": 2
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 2
        },
        {
          "file": "src/components/ProjectSettingsPane.tsx",
          "count": 1
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".github/workflows/auto-tag.yml",
          "count": 1
        },
        {
          "file": ".github/workflows/pr-checks.yml",
          "count": 2
        },
        {
          "file": "README.md",
          "count": 4
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 4
        },
        {
          "file": ".github/ISSUE_TEMPLATE/bug_report.md",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/config.yml",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/feature_request.md",
          "count": 1
        },
        {
          "file": ".gitignore",
          "count": 1
        },
        {
          "file": "resources/images/athanor_logo.png",
          "count": 1
        },
        {
          "file": "package-lock.json",
          "count": 2
        },
        {
          "file": "src/components/FileViewerPanel.tsx",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "src/utils/fileTextDetection.ts",
          "count": 1
        },
        {
          "file": "src/utils/languageMapping.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/prompts/prompt_test.xml",
          "count": 1
        },
        {
          "file": "scripts/check-dco.sh",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.test.ts",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/hooks/.athignore",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_prompt_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_task_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/example_prompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/example_task.xml",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/action-panel/CustomPromptsHelpModal.tsx",
          "count": 1
        },
        {
          "file": "resources/prompts/task_pr_changelog.xml",
          "count": 1
        },
        {
          "file": "src/components/FileContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/components/action-panel/VariantsContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/stores/workbenchStore.ts",
          "count": 1
        }
      ]
    ],
    [
      ".ath_materials/project_settings.json",
      [
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.test.ts",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 2
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/stores/settingsStore.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "public/index.html",
          "count": 1
        },
        {
          "file": "resources/images/athanor.ico",
          "count": 1
        },
        {
          "file": "resources/images/athanor.png",
          "count": 1
        },
        {
          "file": "resources/images/athanor_logo.png",
          "count": 1
        }
      ]
    ],
    [
      "electron/handlers/coreHandlers.ts",
      [
        {
          "file": ".ath_materials/project_settings.json",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 4
        },
        {
          "file": "electron/ignoreRulesManager.test.ts",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 5
        },
        {
          "file": "electron/main.ts",
          "count": 2
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.test.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 5
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 7
        },
        {
          "file": "src/stores/settingsStore.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.test.ts",
          "count": 3
        },
        {
          "file": "electron/preload.ts",
          "count": 9
        },
        {
          "file": "src/types/global.d.ts",
          "count": 9
        },
        {
          "file": "src/utils/constants.ts",
          "count": 3
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_prompt_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_task_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/example_prompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/example_task.xml",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/action-panel/CustomPromptsHelpModal.tsx",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 2
        },
        {
          "file": "athanor.yml",
          "count": 2
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 5
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 4
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 1
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 5
        },
        {
          "file": "temp.txt",
          "count": 1
        },
        {
          "file": "src/components/FileContextMenu.tsx",
          "count": 2
        },
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "electron/filePathManager.ts",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "src/commands/selectCommand.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/fileOperationHandlers.ts",
          "count": 3
        },
        {
          "file": "electron/handlers/fileWatchHandlers.ts",
          "count": 2
        },
        {
          "file": ".ath_resources/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_resources/README.md",
          "count": 1
        },
        {
          "file": ".ath_resources/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_resources/temp.txt",
          "count": 1
        },
        {
          "file": "src/components/FileExplorer.tsx",
          "count": 1
        }
      ]
    ],
    [
      "electron/services/PathUtils.test.ts",
      [
        {
          "file": ".ath_materials/project_settings.json",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.test.ts",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/services/FileService.ts",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/stores/settingsStore.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/handlers/coreHandlers.test.ts",
      [
        {
          "file": "CHANGELOG.md",
          "count": 3
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 3
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 3
        },
        {
          "file": "package.json",
          "count": 3
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 2
        },
        {
          "file": "src/types/global.d.ts",
          "count": 3
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_prompt_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_task_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/example_prompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/example_task.xml",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/action-panel/CustomPromptsHelpModal.tsx",
          "count": 1
        }
      ]
    ],
    [
      "TUTORIAL.md",
      [
        {
          "file": ".athignore",
          "count": 2
        },
        {
          "file": "CHANGELOG.md",
          "count": 5
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 5
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 2
        },
        {
          "file": "src/components/ProjectSettingsPane.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 3
        },
        {
          "file": "README.md",
          "count": 4
        },
        {
          "file": ".github/ISSUE_TEMPLATE/bug_report.md",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/config.yml",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/feature_request.md",
          "count": 1
        },
        {
          "file": ".gitignore",
          "count": 1
        },
        {
          "file": "resources/images/athanor_logo.png",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.test.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_prompt_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_task_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/example_prompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/example_task.xml",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/action-panel/CustomPromptsHelpModal.tsx",
          "count": 1
        },
        {
          "file": "resources/prompts/task_pr_changelog.xml",
          "count": 1
        },
        {
          "file": "src/components/FileContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/components/action-panel/VariantsContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/stores/workbenchStore.ts",
          "count": 1
        }
      ]
    ],
    [
      "resources/files/default_athignore",
      [
        {
          "file": ".athignore",
          "count": 3
        },
        {
          "file": "CHANGELOG.md",
          "count": 2
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 3
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 2
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 2
        },
        {
          "file": "src/components/ProjectSettingsPane.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 2
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 2
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/prompts/prompt_test.xml",
          "count": 1
        },
        {
          "file": ".github/workflows/pr-checks.yml",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "scripts/check-dco.sh",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.test.ts",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/hooks/.athignore",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        }
      ]
    ],
    [
      "src/components/ProjectCreationDialog.tsx",
      [
        {
          "file": ".athignore",
          "count": 3
        },
        {
          "file": "CHANGELOG.md",
          "count": 2
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 2
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 3
        },
        {
          "file": "resources/files/default_athignore",
          "count": 2
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 2
        },
        {
          "file": "src/components/ProjectSettingsPane.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 2
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 2
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/bug_report.md",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/config.yml",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/feature_request.md",
          "count": 1
        },
        {
          "file": ".gitignore",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "resources/images/athanor_logo.png",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        }
      ]
    ],
    [
      "src/components/ProjectSettingsPane.tsx",
      [
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/services/fileIgnoreService.ts",
      [
        {
          "file": ".athignore",
          "count": 2
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 2
        },
        {
          "file": "resources/files/default_athignore",
          "count": 2
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 2
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 2
        },
        {
          "file": "src/components/ProjectSettingsPane.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 2
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        }
      ]
    ],
    [
      ".ath_materials/TODO.txt",
      [
        {
          "file": ".github/workflows/auto-tag.yml",
          "count": 1
        },
        {
          "file": ".github/workflows/pr-checks.yml",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/api_cline_compatible.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/anthropic.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/base-llm-client.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/gemini.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/llm-clients-factory.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openai.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openrouter.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/response.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/llm-interface.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/memory-manager.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/prompt-utils.js",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "src/components/ApplyChangesPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        }
      ]
    ],
    [
      ".github/workflows/auto-tag.yml",
      [
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".github/workflows/pr-checks.yml",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        }
      ]
    ],
    [
      ".github/workflows/pr-checks.yml",
      [
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".github/workflows/auto-tag.yml",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 2
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 2
        },
        {
          "file": ".ath_materials/prompts/prompt_test.xml",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "scripts/check-dco.sh",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.test.ts",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/hooks/.athignore",
          "count": 1
        }
      ]
    ],
    [
      "README.md",
      [
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".github/workflows/auto-tag.yml",
          "count": 1
        },
        {
          "file": ".github/workflows/pr-checks.yml",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 4
        },
        {
          "file": "package.json",
          "count": 7
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 4
        },
        {
          "file": "TUTORIAL.md",
          "count": 4
        },
        {
          "file": ".github/FUNDING.yml",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 2
        },
        {
          "file": ".github/ISSUE_TEMPLATE/bug_report.md",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/config.yml",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/feature_request.md",
          "count": 1
        },
        {
          "file": ".gitignore",
          "count": 1
        },
        {
          "file": "resources/images/athanor_logo.png",
          "count": 2
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 1
        },
        {
          "file": "resources/prompts/task_pr_changelog.xml",
          "count": 1
        },
        {
          "file": "src/components/FileContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/components/action-panel/VariantsContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/stores/workbenchStore.ts",
          "count": 1
        },
        {
          "file": "resources/images/athanor_snapshot_apply_changes.png",
          "count": 1
        },
        {
          "file": "resources/images/athanor_snapshot.png",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/project_settings.json",
          "count": 1
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "public/index.html",
          "count": 1
        },
        {
          "file": "resources/images/athanor.ico",
          "count": 1
        },
        {
          "file": "resources/images/athanor.png",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_metaprompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        }
      ]
    ],
    [
      "CONTRIBUTING.md",
      [
        {
          "file": "CHANGELOG.md",
          "count": 4
        },
        {
          "file": "README.md",
          "count": 4
        },
        {
          "file": "TUTORIAL.md",
          "count": 3
        },
        {
          "file": "package.json",
          "count": 5
        },
        {
          "file": ".github/FUNDING.yml",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 2
        },
        {
          "file": ".github/ISSUE_TEMPLATE/bug_report.md",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/config.yml",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/feature_request.md",
          "count": 1
        },
        {
          "file": ".gitignore",
          "count": 1
        },
        {
          "file": "resources/images/athanor_logo.png",
          "count": 1
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 1
        },
        {
          "file": ".ath_materials/prompts/prompt_test.xml",
          "count": 1
        },
        {
          "file": ".github/workflows/pr-checks.yml",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "scripts/check-dco.sh",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.test.ts",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/hooks/.athignore",
          "count": 1
        },
        {
          "file": "resources/prompts/task_pr_changelog.xml",
          "count": 1
        },
        {
          "file": "src/components/FileContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/components/action-panel/VariantsContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/stores/workbenchStore.ts",
          "count": 1
        }
      ]
    ],
    [
      "package-lock.json",
      [
        {
          "file": "package.json",
          "count": 5
        },
        {
          "file": "CHANGELOG.md",
          "count": 2
        },
        {
          "file": "src/components/FileViewerPanel.tsx",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 2
        },
        {
          "file": "src/utils/fileTextDetection.ts",
          "count": 1
        },
        {
          "file": "src/utils/languageMapping.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/prompts/prompt_test.xml",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": ".github/workflows/pr-checks.yml",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "scripts/check-dco.sh",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.test.ts",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/hooks/.athignore",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/AthanorTabs.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/hooks/useLogPanelResize.ts",
          "count": 1
        },
        {
          "file": "src/stores/applyChangesStore.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        },
        {
          "file": "electron/windowManager.ts",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "webpack.preload.config.js",
          "count": 1
        },
        {
          "file": "webpack.renderer.config.js",
          "count": 1
        }
      ]
    ],
    [
      ".github/FUNDING.yml",
      [
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        }
      ]
    ],
    [
      ".github/ISSUE_TEMPLATE/bug_report.md",
      [
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/config.yml",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/feature_request.md",
          "count": 1
        },
        {
          "file": ".gitignore",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/images/athanor_logo.png",
          "count": 1
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 1
        }
      ]
    ],
    [
      ".github/ISSUE_TEMPLATE/config.yml",
      [
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/bug_report.md",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/feature_request.md",
          "count": 1
        },
        {
          "file": ".gitignore",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/images/athanor_logo.png",
          "count": 1
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 1
        }
      ]
    ],
    [
      ".github/ISSUE_TEMPLATE/feature_request.md",
      [
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/bug_report.md",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/config.yml",
          "count": 1
        },
        {
          "file": ".gitignore",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/images/athanor_logo.png",
          "count": 1
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 1
        }
      ]
    ],
    [
      ".gitignore",
      [
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/bug_report.md",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/config.yml",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/feature_request.md",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/images/athanor_logo.png",
          "count": 1
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 1
        }
      ]
    ],
    [
      "resources/images/athanor_logo.png",
      [
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/bug_report.md",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/config.yml",
          "count": 1
        },
        {
          "file": ".github/ISSUE_TEMPLATE/feature_request.md",
          "count": 1
        },
        {
          "file": ".gitignore",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 2
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 2
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/project_settings.json",
          "count": 1
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "public/index.html",
          "count": 1
        },
        {
          "file": "resources/images/athanor.ico",
          "count": 1
        },
        {
          "file": "resources/images/athanor.png",
          "count": 1
        }
      ]
    ],
    [
      "src/utils/fileTextDetection.ts",
      [
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "src/components/FileViewerPanel.tsx",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "src/utils/languageMapping.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/utils/languageMapping.ts",
      [
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "src/components/FileViewerPanel.tsx",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "src/utils/fileTextDetection.ts",
          "count": 1
        }
      ]
    ],
    [
      ".ath_materials/prompts/prompt_test.xml",
      [
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": ".github/workflows/pr-checks.yml",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "scripts/check-dco.sh",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.test.ts",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/hooks/.athignore",
          "count": 1
        }
      ]
    ],
    [
      "scripts/check-dco.sh",
      [
        {
          "file": ".ath_materials/prompts/prompt_test.xml",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": ".github/workflows/pr-checks.yml",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.test.ts",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/hooks/.athignore",
          "count": 1
        }
      ]
    ],
    [
      "src/actions/ApplyAiOutputAction.test.ts",
      [
        {
          "file": ".ath_materials/prompts/prompt_test.xml",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": ".github/workflows/pr-checks.yml",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "scripts/check-dco.sh",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.test.ts",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/hooks/.athignore",
          "count": 1
        }
      ]
    ],
    [
      "src/components/fileExplorer/hooks/.athignore",
      [
        {
          "file": ".ath_materials/prompts/prompt_test.xml",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": ".github/workflows/pr-checks.yml",
          "count": 1
        },
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "electron/services/PathUtils.ts",
          "count": 1
        },
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "scripts/check-dco.sh",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.test.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.test.ts",
          "count": 1
        }
      ]
    ],
    [
      "resources/prompts/custom_prompt_designer.md",
      [
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.test.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_task_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/example_prompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/example_task.xml",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/action-panel/CustomPromptsHelpModal.tsx",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        }
      ]
    ],
    [
      "resources/prompts/custom_task_designer.md",
      [
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.test.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_prompt_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/example_prompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/example_task.xml",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/action-panel/CustomPromptsHelpModal.tsx",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        }
      ]
    ],
    [
      "resources/prompts/example_prompt.xml",
      [
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.test.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_prompt_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_task_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/example_task.xml",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/action-panel/CustomPromptsHelpModal.tsx",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        }
      ]
    ],
    [
      "resources/prompts/example_task.xml",
      [
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.test.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_prompt_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_task_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/example_prompt.xml",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/action-panel/CustomPromptsHelpModal.tsx",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/components/action-panel/CustomPromptsHelpModal.tsx",
      [
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.test.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_prompt_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/custom_task_designer.md",
          "count": 1
        },
        {
          "file": "resources/prompts/example_prompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/example_task.xml",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        }
      ]
    ],
    [
      "resources/prompts/task_pr_changelog.xml",
      [
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "src/components/FileContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/components/action-panel/VariantsContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/stores/workbenchStore.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/components/FileContextMenu.tsx",
      [
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/prompts/task_pr_changelog.xml",
          "count": 1
        },
        {
          "file": "src/components/action-panel/VariantsContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/stores/workbenchStore.ts",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 2
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 2
        },
        {
          "file": "src/components/fileExplorer/hooks/useFileExplorer.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 2
        },
        {
          "file": "electron/preload.ts",
          "count": 2
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        }
      ]
    ],
    [
      "src/components/action-panel/VariantsContextMenu.tsx",
      [
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/prompts/task_pr_changelog.xml",
          "count": 1
        },
        {
          "file": "src/components/FileContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/stores/workbenchStore.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/stores/workbenchStore.ts",
      [
        {
          "file": "CHANGELOG.md",
          "count": 1
        },
        {
          "file": "CONTRIBUTING.md",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "TUTORIAL.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/prompts/task_pr_changelog.xml",
          "count": 1
        },
        {
          "file": "src/components/FileContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/components/action-panel/VariantsContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 2
        },
        {
          "file": "src/index.css",
          "count": 2
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        }
      ]
    ],
    [
      "resources/images/athanor_snapshot_apply_changes.png",
      [
        {
          "file": "README.md",
          "count": 1
        }
      ]
    ],
    [
      "resources/images/athanor_snapshot.png",
      [
        {
          "file": "README.md",
          "count": 1
        }
      ]
    ],
    [
      ".ath_materials/LICENSE",
      [
        {
          "file": ".ath_materials/README.md",
          "count": 2
        },
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/api_cline_compatible.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/anthropic.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/base-llm-client.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/gemini.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/llm-clients-factory.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openai.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openrouter.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/response.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/llm-interface.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/memory-manager.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/prompt-utils.js",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 2
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 2
        },
        {
          "file": "src/components/ApplyChangesPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": "electron/filePathManager.ts",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        }
      ]
    ],
    [
      ".ath_materials/README.md",
      [
        {
          "file": ".ath_materials/LICENSE",
          "count": 2
        },
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/api_cline_compatible.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/anthropic.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/base-llm-client.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/gemini.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/llm-clients-factory.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openai.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openrouter.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/response.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/llm-interface.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/memory-manager.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/prompt-utils.js",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 2
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 2
        },
        {
          "file": "src/components/ApplyChangesPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": ".ath_materials/project_settings.json",
          "count": 1
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "public/index.html",
          "count": 1
        },
        {
          "file": "resources/images/athanor.ico",
          "count": 1
        },
        {
          "file": "resources/images/athanor.png",
          "count": 1
        },
        {
          "file": "resources/images/athanor_logo.png",
          "count": 1
        },
        {
          "file": "electron/filePathManager.ts",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        }
      ]
    ],
    [
      ".ath_materials/api_cline_compatible.ts",
      [
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/anthropic.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/base-llm-client.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/gemini.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/llm-clients-factory.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openai.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openrouter.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/response.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/llm-interface.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/memory-manager.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/prompt-utils.js",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "src/components/ApplyChangesPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        }
      ]
    ],
    [
      ".ath_materials/llm/clients/anthropic.js",
      [
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/api_cline_compatible.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/base-llm-client.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/gemini.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/llm-clients-factory.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openai.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openrouter.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/response.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/llm-interface.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/memory-manager.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/prompt-utils.js",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "src/components/ApplyChangesPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        }
      ]
    ],
    [
      ".ath_materials/llm/clients/base-llm-client.js",
      [
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/api_cline_compatible.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/anthropic.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/gemini.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/llm-clients-factory.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openai.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openrouter.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/response.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/llm-interface.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/memory-manager.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/prompt-utils.js",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "src/components/ApplyChangesPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        }
      ]
    ],
    [
      ".ath_materials/llm/clients/gemini.js",
      [
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/api_cline_compatible.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/anthropic.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/base-llm-client.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/llm-clients-factory.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openai.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openrouter.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/response.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/llm-interface.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/memory-manager.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/prompt-utils.js",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "src/components/ApplyChangesPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        }
      ]
    ],
    [
      ".ath_materials/llm/clients/llm-clients-factory.js",
      [
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/api_cline_compatible.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/anthropic.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/base-llm-client.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/gemini.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openai.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openrouter.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/response.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/llm-interface.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/memory-manager.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/prompt-utils.js",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "src/components/ApplyChangesPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        }
      ]
    ],
    [
      ".ath_materials/llm/clients/openai.js",
      [
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/api_cline_compatible.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/anthropic.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/base-llm-client.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/gemini.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/llm-clients-factory.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openrouter.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/response.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/llm-interface.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/memory-manager.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/prompt-utils.js",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "src/components/ApplyChangesPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        }
      ]
    ],
    [
      ".ath_materials/llm/clients/openrouter.js",
      [
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/api_cline_compatible.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/anthropic.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/base-llm-client.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/gemini.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/llm-clients-factory.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openai.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/response.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/llm-interface.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/memory-manager.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/prompt-utils.js",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "src/components/ApplyChangesPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        }
      ]
    ],
    [
      ".ath_materials/llm/clients/response.js",
      [
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/api_cline_compatible.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/anthropic.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/base-llm-client.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/gemini.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/llm-clients-factory.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openai.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openrouter.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/llm-interface.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/memory-manager.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/prompt-utils.js",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "src/components/ApplyChangesPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        }
      ]
    ],
    [
      ".ath_materials/llm/interface/llm-interface.js",
      [
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/api_cline_compatible.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/anthropic.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/base-llm-client.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/gemini.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/llm-clients-factory.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openai.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openrouter.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/response.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/memory-manager.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/prompt-utils.js",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "src/components/ApplyChangesPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        }
      ]
    ],
    [
      ".ath_materials/llm/interface/memory-manager.js",
      [
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/api_cline_compatible.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/anthropic.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/base-llm-client.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/gemini.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/llm-clients-factory.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openai.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openrouter.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/response.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/llm-interface.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/prompt-utils.js",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "src/components/ApplyChangesPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        }
      ]
    ],
    [
      ".ath_materials/llm/interface/prompt-utils.js",
      [
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/api_cline_compatible.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/anthropic.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/base-llm-client.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/gemini.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/llm-clients-factory.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openai.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openrouter.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/response.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/llm-interface.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/memory-manager.js",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "src/components/ApplyChangesPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        }
      ]
    ],
    [
      ".ath_materials/tailwind.config.js",
      [
        {
          "file": ".ath_materials/LICENSE",
          "count": 2
        },
        {
          "file": ".ath_materials/README.md",
          "count": 2
        },
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/api_cline_compatible.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/anthropic.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/base-llm-client.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/gemini.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/llm-clients-factory.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openai.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openrouter.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/response.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/llm-interface.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/memory-manager.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/prompt-utils.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 2
        },
        {
          "file": "src/components/ApplyChangesPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": "electron/filePathManager.ts",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        }
      ]
    ],
    [
      ".ath_materials/temp.txt",
      [
        {
          "file": ".ath_materials/LICENSE",
          "count": 2
        },
        {
          "file": ".ath_materials/README.md",
          "count": 2
        },
        {
          "file": ".ath_materials/TODO.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/api_cline_compatible.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/anthropic.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/base-llm-client.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/gemini.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/llm-clients-factory.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openai.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/openrouter.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/clients/response.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/llm-interface.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/memory-manager.js",
          "count": 1
        },
        {
          "file": ".ath_materials/llm/interface/prompt-utils.js",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 2
        },
        {
          "file": "src/components/ApplyChangesPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": "electron/filePathManager.ts",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        }
      ]
    ],
    [
      "public/index.html",
      [
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/project_settings.json",
          "count": 1
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/images/athanor.ico",
          "count": 1
        },
        {
          "file": "resources/images/athanor.png",
          "count": 1
        },
        {
          "file": "resources/images/athanor_logo.png",
          "count": 1
        }
      ]
    ],
    [
      "resources/images/athanor.ico",
      [
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/project_settings.json",
          "count": 1
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "public/index.html",
          "count": 1
        },
        {
          "file": "resources/images/athanor.png",
          "count": 1
        },
        {
          "file": "resources/images/athanor_logo.png",
          "count": 1
        }
      ]
    ],
    [
      "resources/images/athanor.png",
      [
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/project_settings.json",
          "count": 1
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "public/index.html",
          "count": 1
        },
        {
          "file": "resources/images/athanor.ico",
          "count": 1
        },
        {
          "file": "resources/images/athanor_logo.png",
          "count": 1
        }
      ]
    ],
    [
      "resources/prompts/prompt_develop.xml",
      [
        {
          "file": "package.json",
          "count": 4
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 4
        },
        {
          "file": "src/commands/parser/commandParser.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 5
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 3
        },
        {
          "file": "src/utils/configUtils.ts",
          "count": 2
        },
        {
          "file": "src/utils/projectInfoUtils.ts",
          "count": 2
        },
        {
          "file": "src/utils/promptTemplates.ts",
          "count": 2
        },
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 2
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 2
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 3
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 2
        },
        {
          "file": "src/components/AthanorTabs.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 3
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 2
        },
        {
          "file": "src/hooks/useLogPanelResize.ts",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "src/stores/applyChangesStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 2
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 5
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 2
        },
        {
          "file": "src/utils/constants.ts",
          "count": 2
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 6
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 5
        },
        {
          "file": "resources/prompts/prompt_metaprompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 4
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 2
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/stores/logStore.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 2
        },
        {
          "file": "src/utils/contextDetection.ts",
          "count": 1
        },
        {
          "file": "src/services/promptService.ts",
          "count": 1
        },
        {
          "file": "src/types/promptTypes.d.ts",
          "count": 2
        },
        {
          "file": "src/stores/promptStore.ts",
          "count": 1
        },
        {
          "file": "resources/prompts/develop.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/software_engineer.xml",
          "count": 1
        }
      ]
    ],
    [
      "resources/prompts/prompt_writer.xml",
      [
        {
          "file": "package.json",
          "count": 4
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 4
        },
        {
          "file": "src/commands/parser/commandParser.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 3
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 3
        },
        {
          "file": "src/utils/configUtils.ts",
          "count": 2
        },
        {
          "file": "src/utils/projectInfoUtils.ts",
          "count": 2
        },
        {
          "file": "src/utils/promptTemplates.ts",
          "count": 1
        },
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 2
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/AthanorTabs.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/hooks/useLogPanelResize.ts",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "src/stores/applyChangesStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 2
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 2
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 2
        },
        {
          "file": "src/utils/constants.ts",
          "count": 2
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_metaprompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/commands/parser/commandParser.ts",
      [
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        },
        {
          "file": "src/utils/configUtils.ts",
          "count": 1
        },
        {
          "file": "src/utils/projectInfoUtils.ts",
          "count": 1
        },
        {
          "file": "src/utils/promptTemplates.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/descriptions.ts",
          "count": 1
        },
        {
          "file": "src/commands/index.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/index.ts",
          "count": 1
        },
        {
          "file": "src/commands/types.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/stores/commandStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/actionDescriptions.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/utils/configUtils.ts",
      [
        {
          "file": "package.json",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 2
        },
        {
          "file": "src/commands/parser/commandParser.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 2
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 2
        },
        {
          "file": "src/utils/projectInfoUtils.ts",
          "count": 2
        },
        {
          "file": "src/utils/promptTemplates.ts",
          "count": 1
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/utils/projectInfoUtils.ts",
      [
        {
          "file": "package.json",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 2
        },
        {
          "file": "src/commands/parser/commandParser.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 2
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 2
        },
        {
          "file": "src/utils/configUtils.ts",
          "count": 2
        },
        {
          "file": "src/utils/promptTemplates.ts",
          "count": 1
        },
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/utils/promptTemplates.ts",
      [
        {
          "file": "package.json",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/commands/parser/commandParser.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 3
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        },
        {
          "file": "src/utils/configUtils.ts",
          "count": 1
        },
        {
          "file": "src/utils/projectInfoUtils.ts",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 2
        },
        {
          "file": "src/utils/contextDetection.ts",
          "count": 2
        },
        {
          "file": "electron/handlers/fileOperationHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        }
      ]
    ],
    [
      "src/actions/ApplyAiOutputAction.ts",
      [
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 3
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 2
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 2
        },
        {
          "file": "src/components/AthanorTabs.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/hooks/useLogPanelResize.ts",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "src/stores/applyChangesStore.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 2
        },
        {
          "file": "src/stores/logStore.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        },
        {
          "file": "src/commands/descriptions.ts",
          "count": 1
        },
        {
          "file": "src/commands/index.ts",
          "count": 2
        },
        {
          "file": "src/commands/parser/commandParser.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/index.ts",
          "count": 1
        },
        {
          "file": "src/commands/types.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/stores/commandStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/actionDescriptions.ts",
          "count": 1
        },
        {
          "file": "src/commands/selectCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/taskCommand.ts",
          "count": 1
        },
        {
          "file": "src/utils/commandParser.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/commands/applyChangesCommand.ts",
      [
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 3
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 3
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 2
        },
        {
          "file": "src/components/AthanorTabs.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/hooks/useLogPanelResize.ts",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "src/stores/applyChangesStore.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/stores/logStore.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        },
        {
          "file": "src/commands/index.ts",
          "count": 1
        },
        {
          "file": "src/commands/selectCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/taskCommand.ts",
          "count": 1
        },
        {
          "file": "src/utils/commandParser.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/commands/parser/applyChangesParser.ts",
      [
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 3
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 2
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 2
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 3
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 2
        },
        {
          "file": "src/components/AthanorTabs.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 3
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/hooks/useLogPanelResize.ts",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "src/stores/applyChangesStore.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 2
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_metaprompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 2
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 2
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/stores/logStore.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        }
      ]
    ],
    [
      "src/components/AthanorTabs.tsx",
      [
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 2
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 2
        },
        {
          "file": "src/hooks/useLogPanelResize.ts",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "src/stores/applyChangesStore.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        },
        {
          "file": "src/hooks/usePanelResize.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/hooks/useLogPanelResize.ts",
      [
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/AthanorTabs.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "src/stores/applyChangesStore.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/stores/applyChangesStore.ts",
      [
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/AthanorTabs.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/hooks/useLogPanelResize.ts",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/utils/fileOperations.ts",
      [
        {
          "file": "package-lock.json",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 2
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 2
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/AthanorTabs.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/hooks/useLogPanelResize.ts",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "src/stores/applyChangesStore.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_metaprompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        }
      ]
    ],
    [
      "athanor.yml",
      [
        {
          "file": "PROJECT.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        },
        {
          "file": "src/utils/configUtils.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 2
        },
        {
          "file": "src/utils/projectInfoUtils.ts",
          "count": 1
        },
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 2
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 2
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 2
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 2
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        },
        {
          "file": ".ath_resources/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_resources/README.md",
          "count": 1
        },
        {
          "file": ".ath_resources/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_resources/temp.txt",
          "count": 1
        },
        {
          "file": "src/components/FileExplorer.tsx",
          "count": 1
        }
      ]
    ],
    [
      "resources/prompts/prompt_architect.xml",
      [
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 5
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 6
        },
        {
          "file": "resources/prompts/prompt_metaprompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 4
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 2
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 2
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 4
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 3
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/stores/logStore.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        },
        {
          "file": "src/utils/contextDetection.ts",
          "count": 1
        },
        {
          "file": "src/utils/promptTemplates.ts",
          "count": 1
        },
        {
          "file": "src/services/promptService.ts",
          "count": 1
        },
        {
          "file": "src/types/promptTypes.d.ts",
          "count": 2
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/stores/promptStore.ts",
          "count": 1
        }
      ]
    ],
    [
      "resources/prompts/prompt_autoselect.xml",
      [
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 5
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 5
        },
        {
          "file": "resources/prompts/prompt_metaprompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 4
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 2
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 2
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 3
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 3
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/stores/logStore.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        },
        {
          "file": "src/utils/contextDetection.ts",
          "count": 1
        },
        {
          "file": "src/utils/promptTemplates.ts",
          "count": 1
        },
        {
          "file": "src/services/promptService.ts",
          "count": 1
        },
        {
          "file": "src/types/promptTypes.d.ts",
          "count": 2
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/stores/promptStore.ts",
          "count": 1
        }
      ]
    ],
    [
      "resources/prompts/prompt_metaprompt.xml",
      [
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        }
      ]
    ],
    [
      "resources/prompts/prompt_minimal.xml",
      [
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_metaprompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 2
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 2
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/stores/logStore.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        }
      ]
    ],
    [
      "resources/prompts/prompt_query.xml",
      [
        {
          "file": ".athignore",
          "count": 2
        },
        {
          "file": "README.md",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 4
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 4
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 4
        },
        {
          "file": "resources/prompts/prompt_metaprompt.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_writer.xml",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 2
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 2
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 2
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 2
        },
        {
          "file": "src/stores/fileSystemStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 2
        },
        {
          "file": "src/utils/codebaseDocumentation.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "src/utils/fileOperations.ts",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 2
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 3
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/stores/logStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/contextDetection.ts",
          "count": 1
        },
        {
          "file": "src/utils/promptTemplates.ts",
          "count": 1
        },
        {
          "file": "src/services/promptService.ts",
          "count": 1
        },
        {
          "file": "src/types/promptTypes.d.ts",
          "count": 1
        },
        {
          "file": "resources/prompts/autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/develop.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/software_engineer.xml",
          "count": 1
        }
      ]
    ],
    [
      "electron/fileSystemManager.ts",
      [
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 2
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 5
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 3
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 2
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 3
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        },
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "electron/filePathManager.ts",
          "count": 2
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 4
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 2
        },
        {
          "file": "electron/handlers/fileOperationHandlers.ts",
          "count": 2
        },
        {
          "file": "electron/handlers/fileWatchHandlers.ts",
          "count": 1
        },
        {
          "file": ".ath_resources/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_resources/README.md",
          "count": 1
        },
        {
          "file": ".ath_resources/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_resources/temp.txt",
          "count": 1
        },
        {
          "file": "src/components/FileExplorer.tsx",
          "count": 1
        }
      ]
    ],
    [
      "src/services/fileSystemService.ts",
      [
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 2
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 3
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 5
        },
        {
          "file": "electron/preload.ts",
          "count": 4
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 3
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 3
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 4
        },
        {
          "file": "temp.txt",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 2
        },
        {
          "file": "src/components/FileContextMenu.tsx",
          "count": 1
        },
        {
          "file": "electron/handlers/fileOperationHandlers.ts",
          "count": 1
        },
        {
          "file": "src/services/promptService.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "electron/filePathManager.ts",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 2
        },
        {
          "file": "src/commands/selectCommand.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": ".ath_resources/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_resources/README.md",
          "count": 1
        },
        {
          "file": ".ath_resources/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_resources/temp.txt",
          "count": 1
        },
        {
          "file": "src/components/FileExplorer.tsx",
          "count": 1
        }
      ]
    ],
    [
      "temp.txt",
      [
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "resources/files/default_athignore",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 3
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 2
        },
        {
          "file": "src/components/ProjectCreationDialog.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/services/fileIgnoreService.ts",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 1
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/stores/logStore.ts",
          "count": 1
        },
        {
          "file": "src/hooks/useFileDrop.ts",
          "count": 2
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 2
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 2
        },
        {
          "file": "src/commands/parser/commandParser.ts",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "tailwind.config.js",
          "count": 1
        },
        {
          "file": "resources/prompts/autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/develop.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/software_engineer.xml",
          "count": 2
        }
      ]
    ],
    [
      "src/components/fileExplorer/hooks/useFileExplorer.ts",
      [
        {
          "file": ".athignore",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 1
        },
        {
          "file": "src/components/FileContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorer.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        }
      ]
    ],
    [
      "src/components/CommandButton.tsx",
      [
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 2
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/stores/logStore.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        },
        {
          "file": "src/commands/descriptions.ts",
          "count": 1
        },
        {
          "file": "src/commands/index.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/commandParser.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/index.ts",
          "count": 1
        },
        {
          "file": "src/commands/types.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/stores/commandStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/actionDescriptions.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/stores/logStore.ts",
      [
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_minimal.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/actions/ManualCopyAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/applyChangesParser.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        }
      ]
    ],
    [
      "src/hooks/useFileDrop.ts",
      [
        {
          "file": "temp.txt",
          "count": 2
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 2
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/utils/contextDetection.ts",
      [
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 2
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 2
        },
        {
          "file": "src/utils/promptTemplates.ts",
          "count": 2
        }
      ]
    ],
    [
      "src/components/PromptContextMenu.tsx",
      [
        {
          "file": "src/stores/promptStore.ts",
          "count": 1
        },
        {
          "file": "src/types/promptTypes.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/stores/promptStore.ts",
      [
        {
          "file": "src/components/PromptContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/types/promptTypes.ts",
          "count": 2
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "src/services/promptService.ts",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/types/promptTypes.d.ts",
          "count": 2
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/types/promptTypes.ts",
      [
        {
          "file": "src/components/PromptContextMenu.tsx",
          "count": 1
        },
        {
          "file": "src/stores/promptStore.ts",
          "count": 2
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "src/services/promptService.ts",
          "count": 1
        }
      ]
    ],
    [
      "tailwind.config.js",
      [
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/index.css",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        }
      ]
    ],
    [
      "src/services/promptService.ts",
      [
        {
          "file": "src/stores/promptStore.ts",
          "count": 2
        },
        {
          "file": "src/types/promptTypes.ts",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/types/promptTypes.d.ts",
          "count": 2
        },
        {
          "file": "electron/handlers/fileOperationHandlers.ts",
          "count": 2
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 2
        },
        {
          "file": "electron/filePathManager.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/types/promptTypes.d.ts",
      [
        {
          "file": "resources/prompts/prompt_architect.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_autoselect.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "src/services/promptService.ts",
          "count": 2
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/stores/promptStore.ts",
          "count": 2
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        }
      ]
    ],
    [
      "resources/prompts/autoselect.xml",
      [
        {
          "file": "resources/prompts/develop.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/software_engineer.xml",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 1
        }
      ]
    ],
    [
      "resources/prompts/develop.xml",
      [
        {
          "file": "resources/prompts/autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/software_engineer.xml",
          "count": 2
        },
        {
          "file": "temp.txt",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 1
        }
      ]
    ],
    [
      "resources/prompts/software_engineer.xml",
      [
        {
          "file": "resources/prompts/autoselect.xml",
          "count": 1
        },
        {
          "file": "resources/prompts/develop.xml",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_query.xml",
          "count": 1
        },
        {
          "file": "temp.txt",
          "count": 2
        },
        {
          "file": "resources/prompts/prompt_develop.xml",
          "count": 1
        }
      ]
    ],
    [
      "electron/handlers/fileOperationHandlers.ts",
      [
        {
          "file": "electron/preload.ts",
          "count": 3
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "src/services/promptService.ts",
          "count": 2
        },
        {
          "file": "src/types/global.d.ts",
          "count": 3
        },
        {
          "file": "electron/filePathManager.ts",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 2
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 3
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 2
        },
        {
          "file": "electron/handlers/fileWatchHandlers.ts",
          "count": 2
        },
        {
          "file": "src/services/xmlParsingService.ts",
          "count": 1
        },
        {
          "file": "electron/main.ts",
          "count": 1
        },
        {
          "file": "forge.config.js",
          "count": 1
        },
        {
          "file": "package.json",
          "count": 1
        },
        {
          "file": "src/utils/promptTemplates.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/filePathManager.ts",
      [
        {
          "file": "electron/handlers/fileOperationHandlers.ts",
          "count": 1
        },
        {
          "file": "src/services/promptService.ts",
          "count": 1
        },
        {
          "file": ".ath_materials/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_materials/README.md",
          "count": 1
        },
        {
          "file": ".ath_materials/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_materials/temp.txt",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 2
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 2
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/actions/AutoSelectAction.ts",
      [
        {
          "file": "src/actions/BuildSoftwareEngineerPromptAction.ts",
          "count": 1
        },
        {
          "file": "src/actions/BuildTaskAction.ts",
          "count": 1
        },
        {
          "file": "src/actions/index.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        }
      ]
    ],
    [
      "src/actions/BuildSoftwareEngineerPromptAction.ts",
      [
        {
          "file": "src/actions/AutoSelectAction.ts",
          "count": 1
        },
        {
          "file": "src/actions/BuildTaskAction.ts",
          "count": 1
        },
        {
          "file": "src/actions/index.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        }
      ]
    ],
    [
      "src/actions/BuildTaskAction.ts",
      [
        {
          "file": "src/actions/AutoSelectAction.ts",
          "count": 1
        },
        {
          "file": "src/actions/BuildSoftwareEngineerPromptAction.ts",
          "count": 1
        },
        {
          "file": "src/actions/index.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        }
      ]
    ],
    [
      "src/actions/index.ts",
      [
        {
          "file": "src/actions/AutoSelectAction.ts",
          "count": 1
        },
        {
          "file": "src/actions/BuildSoftwareEngineerPromptAction.ts",
          "count": 1
        },
        {
          "file": "src/actions/BuildTaskAction.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 2
        },
        {
          "file": "src/actions/descriptions.ts",
          "count": 1
        },
        {
          "file": "src/actions/types.ts",
          "count": 1
        },
        {
          "file": "src/commands/descriptions.ts",
          "count": 1
        },
        {
          "file": "src/commands/index.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/commands/selectCommand.ts",
      [
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "src/utils/buildPrompt.ts",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/index.ts",
          "count": 1
        },
        {
          "file": "src/commands/taskCommand.ts",
          "count": 1
        },
        {
          "file": "src/utils/commandParser.ts",
          "count": 1
        }
      ]
    ],
    [
      "electron/handlers/fileWatchHandlers.ts",
      [
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 2
        },
        {
          "file": "electron/handlers/fileOperationHandlers.ts",
          "count": 2
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "electron/ignoreRulesManager.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/actions/descriptions.ts",
      [
        {
          "file": "src/actions/index.ts",
          "count": 1
        },
        {
          "file": "src/actions/types.ts",
          "count": 1
        },
        {
          "file": "src/commands/descriptions.ts",
          "count": 1
        },
        {
          "file": "src/commands/index.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/actions/types.ts",
      [
        {
          "file": "src/actions/descriptions.ts",
          "count": 1
        },
        {
          "file": "src/actions/index.ts",
          "count": 1
        },
        {
          "file": "src/commands/descriptions.ts",
          "count": 1
        },
        {
          "file": "src/commands/index.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/commands/descriptions.ts",
      [
        {
          "file": "src/actions/descriptions.ts",
          "count": 1
        },
        {
          "file": "src/actions/index.ts",
          "count": 1
        },
        {
          "file": "src/actions/types.ts",
          "count": 1
        },
        {
          "file": "src/commands/index.ts",
          "count": 2
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 2
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/commandParser.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/index.ts",
          "count": 1
        },
        {
          "file": "src/commands/types.ts",
          "count": 1
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/stores/commandStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/actionDescriptions.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/commands/index.ts",
      [
        {
          "file": "src/actions/descriptions.ts",
          "count": 1
        },
        {
          "file": "src/actions/index.ts",
          "count": 1
        },
        {
          "file": "src/actions/types.ts",
          "count": 1
        },
        {
          "file": "src/commands/descriptions.ts",
          "count": 2
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 2
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        },
        {
          "file": "src/commands/commandDescriptions.ts",
          "count": 1
        },
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 2
        },
        {
          "file": "src/commands/parser/commandParser.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/index.ts",
          "count": 1
        },
        {
          "file": "src/commands/types.ts",
          "count": 1
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/stores/commandStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/actionDescriptions.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/selectCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/taskCommand.ts",
          "count": 1
        },
        {
          "file": "src/utils/commandParser.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/commands/commandDescriptions.ts",
      [
        {
          "file": "src/commands/index.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/commands/parser/index.ts",
      [
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/descriptions.ts",
          "count": 1
        },
        {
          "file": "src/commands/index.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/commandParser.ts",
          "count": 1
        },
        {
          "file": "src/commands/types.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/stores/commandStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/actionDescriptions.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/commands/types.ts",
      [
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/descriptions.ts",
          "count": 1
        },
        {
          "file": "src/commands/index.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/commandParser.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/index.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/stores/commandStore.ts",
          "count": 1
        },
        {
          "file": "src/utils/actionDescriptions.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/stores/commandStore.ts",
      [
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/descriptions.ts",
          "count": 1
        },
        {
          "file": "src/commands/index.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/commandParser.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/index.ts",
          "count": 1
        },
        {
          "file": "src/commands/types.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/utils/actionDescriptions.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/utils/actionDescriptions.ts",
      [
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/descriptions.ts",
          "count": 1
        },
        {
          "file": "src/commands/index.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/commandParser.ts",
          "count": 1
        },
        {
          "file": "src/commands/parser/index.ts",
          "count": 1
        },
        {
          "file": "src/commands/types.ts",
          "count": 1
        },
        {
          "file": "src/components/ActionPanel.tsx",
          "count": 1
        },
        {
          "file": "src/components/CommandButton.tsx",
          "count": 1
        },
        {
          "file": "src/stores/commandStore.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/commands/taskCommand.ts",
      [
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/index.ts",
          "count": 1
        },
        {
          "file": "src/commands/selectCommand.ts",
          "count": 1
        },
        {
          "file": "src/utils/commandParser.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/utils/commandParser.ts",
      [
        {
          "file": "src/actions/ApplyAiOutputAction.ts",
          "count": 1
        },
        {
          "file": "src/commands/applyChangesCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/index.ts",
          "count": 1
        },
        {
          "file": "src/commands/selectCommand.ts",
          "count": 1
        },
        {
          "file": "src/commands/taskCommand.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/components/fileExplorer/FileExplorer.tsx",
      [
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/FileExplorerItem.tsx",
          "count": 1
        },
        {
          "file": "src/components/fileExplorer/hooks/useFileExplorer.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/hooks/usePanelResize.ts",
      [
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/AthanorTabs.tsx",
          "count": 1
        },
        {
          "file": "src/components/MainLayout.tsx",
          "count": 1
        },
        {
          "file": "src/hooks/useFileSystemLifecycle.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        }
      ]
    ],
    [
      ".ath_resources/LICENSE",
      [
        {
          "file": ".ath_resources/README.md",
          "count": 1
        },
        {
          "file": ".ath_resources/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_resources/temp.txt",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/FileExplorer.tsx",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        }
      ]
    ],
    [
      ".ath_resources/README.md",
      [
        {
          "file": ".ath_resources/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_resources/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_resources/temp.txt",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/FileExplorer.tsx",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        }
      ]
    ],
    [
      ".ath_resources/tailwind.config.js",
      [
        {
          "file": ".ath_resources/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_resources/README.md",
          "count": 1
        },
        {
          "file": ".ath_resources/temp.txt",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/FileExplorer.tsx",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        }
      ]
    ],
    [
      ".ath_resources/temp.txt",
      [
        {
          "file": ".ath_resources/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_resources/README.md",
          "count": 1
        },
        {
          "file": ".ath_resources/tailwind.config.js",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/components/FileExplorer.tsx",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/components/FileExplorer.tsx",
      [
        {
          "file": ".ath_resources/LICENSE",
          "count": 1
        },
        {
          "file": ".ath_resources/README.md",
          "count": 1
        },
        {
          "file": ".ath_resources/tailwind.config.js",
          "count": 1
        },
        {
          "file": ".ath_resources/temp.txt",
          "count": 1
        },
        {
          "file": "athanor.yml",
          "count": 1
        },
        {
          "file": "electron/fileSystemManager.ts",
          "count": 1
        },
        {
          "file": "electron/handlers/coreHandlers.ts",
          "count": 1
        },
        {
          "file": "src/components/AthanorApp.tsx",
          "count": 1
        },
        {
          "file": "src/services/fileSystemService.ts",
          "count": 1
        },
        {
          "file": "src/utils/constants.ts",
          "count": 1
        }
      ]
    ],
    [
      "src/services/xmlParsingService.ts",
      [
        {
          "file": "electron/handlers/fileOperationHandlers.ts",
          "count": 1
        },
        {
          "file": "electron/preload.ts",
          "count": 1
        },
        {
          "file": "src/types/global.d.ts",
          "count": 1
        }
      ]
    ]
  ]
}